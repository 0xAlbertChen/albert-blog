{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/3-hexo/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","path":"img/article-list-background.jpeg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.jpg","path":"img/weixin.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/iconfont.js","path":"js/iconfont.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","path":"js/jquery.autocomplete.min.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":1,"renderable":1},{"_id":"themes/3-hexo/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"54f87e1d1bd08f2f0100284699cb71148f059a30","modified":1588169549939},{"_id":"source/404.md","hash":"d97f69ff63501de89cfd341c68e4d6ed5c8a5b3a","modified":1588061227609},{"_id":"source/CNAME","hash":"66e062385accb267fbbed4d0d5fed64151887160","modified":1588064320947},{"_id":"themes/3-hexo/.gitignore","hash":"86a50fa08e69cab561892aa5edef24f9081bbde1","modified":1588170651009},{"_id":"themes/3-hexo/.DS_Store","hash":"f683c36fc721900009e58611137d3e611b622894","modified":1588169587818},{"_id":"themes/3-hexo/LICENSE","hash":"34cce6b041640a2283f75337f39b94c5beb0b15b","modified":1588170651009},{"_id":"themes/3-hexo/README.md","hash":"e09f474a250f3e862d1d1c2a0c2af675e756a31a","modified":1588170651010},{"_id":"themes/3-hexo/_config.yml","hash":"26f9b79443d57264ffe6cf993b3dfd1c1581487f","modified":1588170651010},{"_id":"source/_data/musics.json","hash":"32bc061f34721b4ff55f880de1d0ec5787acd2f9","modified":1588061227609},{"_id":"source/_data/friends.json","hash":"6f330c0cdbfbe4e50a45527413c798defcef80d1","modified":1588061227609},{"_id":"source/about/index.md","hash":"93ee1242d181a8ccdb26501e323adc1f7753a2a7","modified":1588067872344},{"_id":"source/archives/index.md","hash":"30a0e3a59be650ae34d7bb86ac7da53e21e9cf5b","modified":1588061227610},{"_id":"source/category/index.md","hash":"c77bc4c7d5d8912e5fdea75a65c9984ff47d1f30","modified":1588062722435},{"_id":"source/_posts/sort-algorithms.md","hash":"e59c0afb4170b475a29d14455cf2af9afa2819ee","modified":1588061227610},{"_id":"source/_posts/人格独立是真正受欢迎的根基.md","hash":"9ff84adc7d94905c137ba29ea5898cdad35a323a","modified":1588072149038},{"_id":"source/_posts/哈佛喜欢什么样的孩子.md","hash":"74fad1e7674c67b46bb715a5f38da662aa419250","modified":1588072130056},{"_id":"source/_posts/触发孩子社交主动性的三个方法.md","hash":"e33ea87f3b7009903f68d09bd4b8770ee09b45e5","modified":1588072149042},{"_id":"source/tag/.DS_Store","hash":"4f6c45720c0c0a9eba11c4985cd4dd8c386c93f2","modified":1588169549938},{"_id":"source/tag/index.md","hash":"df24bff4e259ef7775666761dae78021385293f3","modified":1588064636477},{"_id":"themes/3-hexo/layout/index.ejs","hash":"003421f9a57927aa85aa71905313badb0b47820e","modified":1588170651017},{"_id":"themes/3-hexo/layout/post.ejs","hash":"810f046277fc49f523a72d1552eab1e39d3c299c","modified":1588170651018},{"_id":"themes/3-hexo/layout/indexs.md","hash":"5ec700ec000fb7ef378b0af665a2d03a9b99fbcc","modified":1588172558291},{"_id":"themes/3-hexo/source/.DS_Store","hash":"e8c04659da1cd3933d6861493ea7250c5e88d528","modified":1588169595898},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"a0a0f191faafca2aa14abd32ec1b1a385dae1af7","modified":1588170651010},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"7f28d7736133cc8012fbb8a5eeeb1174b862aec6","modified":1588170651011},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"d209ddcfd0149760a30837076be345a09e1797c5","modified":1588170651013},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"1b849749e557d2af482dc49acc93407b72c717f3","modified":1588170651013},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"9ba925f69d273c8f802e67a99eadd21da91b5673","modified":1588170651013},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"5507b4dfab2032345e012a0c5356f63b01395157","modified":1588170651011},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"7a31274da81c076021692ff7c80a1be3bbf6fa4c","modified":1588170651014},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"f39f2ab3a67042e55cd6a51792bfd5ad697808f0","modified":1588170651014},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"30c3ab5847a18db678ffbe3fc6309ec96cb010c0","modified":1588170651015},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"c2e5cef2377884cd79e5f686fe4f74b082744306","modified":1588170651015},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"4f7e00e37783208cb350842085f1987ee854452e","modified":1588170651015},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"c2c08485361645d7e75addb7a458647477a6f8db","modified":1588170651016},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"ad54659a10f0c75b502da6f0ae07f18f55c9d3ab","modified":1588170651016},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"71340ddd60ea14061771463140e299204ecf7ed9","modified":1588170651017},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"6406251dabda66ef686d4c15edbc3061b6d828b8","modified":1588170651017},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1588170651026},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"3934bcba5095e7e6c6b3a801a6e4fa3a35096e10","modified":1588170651030},{"_id":"themes/3-hexo/source/css/style.styl","hash":"c7285882370f522c3bb17055cdf615cf92f48cd0","modified":1588170651030},{"_id":"themes/3-hexo/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1588169495635},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"86b809a6701f1ad8aa13d60dbab58183462ad737","modified":1588170651032},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1588170651031},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1588170651032},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1588170651032},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"b7a1ddcfdb8bf7fe640f400ebdde617ff5158378","modified":1588170651033},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1588170651035},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","hash":"7b8ac4d06c9e763963832529f44a56ad42a81e5f","modified":1588170651035},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1588170651036},{"_id":"themes/3-hexo/source/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1588170651036},{"_id":"themes/3-hexo/source/js/script.js","hash":"7502191e29366a11323dc72ae365b1aed254e6f2","modified":1588170651036},{"_id":"source/_posts/sort-algorithms/1.png","hash":"cb9865eb782b293168e69406b212a0f3097b82a4","modified":1588061227610},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"2ecafdfb5ae5b15fbcd0941ff0d5291b5e5076d5","modified":1588170651031},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"fa6675230f8c313236604e26926b142f4f418bdd","modified":1588170651011},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"cd0022ce7e6d6efb07a00e87477cdf791f7f6703","modified":1588170651012},{"_id":"themes/3-hexo/layout/_partial/comments/gentie.ejs","hash":"1d6eacdadeb247e3b349ca7168f797beae8ff4c5","modified":1588170651012},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"fbd3c7d72c8354d700918390c6cbfc0a11408277","modified":1588170651012},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"f16442568b43d034faaa8e3507f5ae8da34c7b72","modified":1588170651013},{"_id":"themes/3-hexo/source/css/_partial/autocomplete.styl","hash":"f6847a2c6d35dbd6d06dc591bd34ed2019784048","modified":1588170651019},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"4f687cbc74caf8a0887f5e89250284a9bce8b5c1","modified":1588170651020},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"cc0a862b31359a85d12579e49d2eca58d128275c","modified":1588170651019},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f6447a2ac407228e1d53e3455db2919ac0e9f094","modified":1588170651019},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"4d5ac149709447c5eee45f0e23dadeea94fd98ce","modified":1588170651020},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"1bd865029ba8c11750fff83d87f69e5d7c137928","modified":1588170651021},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"0ba318911afbbbffbd2473b472aedf2d3900e978","modified":1588170651021},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"3da8fa04efccfd054a6a65f7153f197d4d68281d","modified":1588170651021},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"65efbddd23a264e7d1e85f4073228526770e833c","modified":1588170651022},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"4b996440bba8ec755aa70bc6d074d7dbba55ec0c","modified":1588170651022},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"c791204c5f10fd876025abf08f4dcb3ca5dde3b6","modified":1588170651022},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1588170651023},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1588170651024},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"3dfe8e557d9dfaf39bca088a02b76deb82dbaa3d","modified":1588170651024},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"c61a31e5310430312677fffe4286097d29d10151","modified":1588170651024},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"aa087561480fb9c2cfd541e33d1e99d5ac1a56bb","modified":1588170651025},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"f8ed131ccf13f4bdd3ec11fc3e997339dd7b66ba","modified":1588170651025},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1588170651023},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1588170651023},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1588170651026},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"57c7f100019d57b512aab509185cb0a6eb9aa4c8","modified":1588170651025},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1588170651026},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1588170651027},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1588170651027},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"69d184a682bcaeba2b180b437dc4431bc3be38aa","modified":1588170651026},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1588170651027},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1588170651027},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1588170651028},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1588170651028},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1588170651028},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1588170651028},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1588170651029},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1588170651029},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1588170651029},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1588170651029},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1588170651030},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"00419a6156f5d4f9b8aba00d446cd64ba73e0d12","modified":1588170651034},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1588170651035}],"Category":[{"name":"编程算法","_id":"ck9lgzujo0005i02aonvv51ga"},{"name":"亲子教育","_id":"ck9lgzujv000bi02apvwr4knd"}],"Data":[{"_id":"musics","data":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}]},{"_id":"friends","data":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}],"Page":[{"title":"404","date":"2019-07-19T08:41:10.000Z","type":"404","layout":"404","description":"你来到了没有知识的荒原 :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2019-07-19 16:41:10\ntype: \"404\"\nlayout: \"404\"\ndescription: \"你来到了没有知识的荒原 :(\"\n---\n","updated":"2020-04-28T08:07:07.609Z","path":"404.html","comments":1,"_id":"ck9lgzuiu0000i02amvu7dntq","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":""},{"title":"about","date":"2019-07-19T08:41:10.000Z","type":"about","layout":"about","_content":"\n## 个人经历\n码农一枚\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-07-19 16:41:10\ntype: \"about\"\nlayout: \"about\"\n---\n\n## 个人经历\n码农一枚\n\n","updated":"2020-04-28T09:57:52.344Z","path":"about/index.html","comments":1,"_id":"ck9lgzujg0001i02axn8vbrrv","content":"<h2><span id=\"个人经历\">个人经历</span></h2><p>码农一枚</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":"<h2 id=\"个人经历\"><a href=\"#个人经历\" class=\"headerlink\" title=\"个人经历\"></a>个人经历</h2><p>码农一枚</p>\n"},{"title":"archives","date":"2019-07-19T08:39:20.000Z","type":"archives","layout":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-07-19 16:39:20\ntype: \"archives\"\nlayout: \"archives\"\n---","updated":"2020-04-28T08:07:07.610Z","path":"archives/index.html","comments":1,"_id":"ck9lgzujl0003i02awboeawcw","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":""},{"title":"category","type":"category","layout":"category","date":"2020-04-28T08:32:02.000Z","_content":"","source":"category/index.md","raw":"---\ntitle: category\ntype: category\nlayout: category\ndate: 2020-04-28 16:32:02\n---\n","updated":"2020-04-28T08:32:02.435Z","path":"category/index.html","comments":1,"_id":"ck9lgzujq0007i02aepirrfu2","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":""},{"title":"tag","type":"tag","layout":"tag","date":"2020-04-28T08:32:01.000Z","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ntype: tag\nlayout: tag\ndate: 2020-04-28 16:32:01\n---\n","updated":"2020-04-28T09:03:56.477Z","path":"tag/index.html","comments":1,"_id":"ck9lgzujt0009i02air25bznw","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":""}],"Post":[{"title":"十大经典排序算法整理汇总（附代码）","top":true,"cover":false,"toc":true,"mathjax":true,"date":"2020-02-16T07:09:23.000Z","password":null,"summary":"本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。","_content":"\n> 关注公众号【算法码上来】，每日算法干货马上就来！\n\n![](/medias/contact.jpg)\n\n## 前言\n\n本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。\n\n**本文并不会详细讲解每种排序算法的原理**，网上有很多很好的教程，大家可以自己去搜了看。\n\n最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 [LeetCode 912. 排序数组](https://leetcode-cn.com/problems/sort-an-array/ \"LeetCode 912. 排序数组\") 这道题。\n\n## 性质汇总\n\n> 如果发现表中有错误，请留言告知。\n\n|   算法  |   最好  |  最坏   |  平均   |  空间   |  稳定性   | 是否基于比较\n| --- | --- | --- | --- | --- | :---: | :---: |\n|  冒泡排序   |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|   选择排序  |  $O(n^2)$  |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\times$  | $\\checkmark$ |\n|   插入排序  |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|  快速排序   |  $O(n\\log n)$   |  $O(n^2)$   |  $O(n\\log n)$   |  $O(\\log n)$~$O(n)$   |  $\\times$   | $\\checkmark$ |\n|  归并排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(n)$  |  $\\checkmark$   | $\\checkmark$ |\n|   希尔排序  |  $O(n^{1.3})$   |   $O(n^2)$  |  $O(n\\log n)$~$O(n^2)$   |  $O(1)$   | $\\times$    | $\\checkmark$ |\n|  计数排序   |  $O(n+k)$   |   $O(n+k)$  |   $O(n+k)$  |  $O(n+k)$   |  $\\checkmark$   | $\\times$ |\n|   基数排序  |   $O(nk)$  |  $O(nk)$   |   $O(nk)$  |   $O(n+k)$  |  $\\checkmark$   | $\\times$ |\n|  桶排序   |   $O(n)$  |   $O(n)$  |   $O(n)$  |  $O(n+m)$   |  $\\checkmark$   | $\\times$ |\n|  堆排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(1)$  |  $\\times$   | $\\checkmark$ |\n\n\n\n> 如果表格显示有问题的话，还可以直接看下面的汇总图：\n\n![十大经典排序算法性质汇总](1.png)\n\n### 维基百科\n\n我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。\n\n**冒泡排序**  \n[https://en.wikipedia.org/wiki/Bubble_sort](https://en.wikipedia.org/wiki/Bubble_sort)\n\n**选择排序**  \n[https://en.wikipedia.org/wiki/Selection_sort](https://en.wikipedia.org/wiki/Selection_sort)\n\n**插入排序**  \n[https://en.wikipedia.org/wiki/Insertion_sort](https://en.wikipedia.org/wiki/Insertion_sort)\n\n**快速排序**  \n[https://en.wikipedia.org/wiki/Quicksort](https://en.wikipedia.org/wiki/Quicksort)\n\n**归并排序**  \n[https://en.wikipedia.org/wiki/Merge_sort](https://en.wikipedia.org/wiki/Merge_sort)\n\n**希尔排序**  \n[https://en.wikipedia.org/wiki/Shellsort](https://en.wikipedia.org/wiki/Shellsort)\n\n**计数排序**  \n[https://en.wikipedia.org/wiki/Counting_sort](https://en.wikipedia.org/wiki/Counting_sort)\n\n**基数排序**  \n[https://en.wikipedia.org/wiki/Radix_sort](https://en.wikipedia.org/wiki/Radix_sort)\n\n**桶排序**  \n[https://en.wikipedia.org/wiki/Bucket_sort](https://en.wikipedia.org/wiki/Bucket_sort)\n\n**堆排序**  \n[https://en.wikipedia.org/wiki/Heapsort](https://en.wikipedia.org/wiki/Heapsort)\n\n## 代码实现\n\n所有的排序算法接口都是相同的，也就是 `vector<int> xxxSort(vector<int>& nums)` 。只需要你传入一个 `vector<int>` 类型的数组，就能返回排序后的结果。\n\n运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。\n\n```cpp\nclass Solution {\npublic:\n    vector<int> sortArray(vector<int>& nums) {\n        return quickSort(nums);\n    }\n\n    // 冒泡排序（超时）\n    vector<int> bubbleSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = n-2; j >= i; --j) {\n                if (nums[j] > nums[j+1]) {\n                    swap(nums[j], nums[j+1]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 选择排序（超时）\n    vector<int> selectSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            int idx = i;\n            for (int j = i; j < n; ++j) {\n                if (nums[j] < nums[idx]) {\n                    idx = j;\n                }\n            }\n            swap(nums[i], nums[idx]);\n        }\n        return nums;\n    }\n\n    // 插入排序（超时）\n    vector<int> insertSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = i; j > 0 && nums[j] < nums[j-1]; --j) {\n                swap(nums[j], nums[j-1]);\n            }\n        }\n        return nums;\n    }\n\n    // 快速排序（24 ms）\n    void qSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return;\n        int m = l;\n        for (int i = l; i < r; ++i) {\n            if (nums[i] < nums[r]) {\n                swap(nums[m++], nums[i]);\n            }\n        }\n        swap(nums[m], nums[r]);\n        qSort(nums, l, m-1);\n        qSort(nums, m+1, r);\n    }\n\n    vector<int> quickSort(vector<int>& nums) {\n        int n = nums.size();\n        qSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序（192 ms）\n    vector<int> mSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return {nums[l]};\n        int m = l+(r-l)/2;\n        vector<int> lnums = mSort(nums, l, m);\n        vector<int> rnums = mSort(nums, m+1, r);\n        vector<int> res;\n        int i = 0, j = 0;\n        while (i <= m-l && j <= r-m-1) {\n            if (lnums[i] < rnums[j]) {\n                res.push_back(lnums[i++]);\n            } else {\n                res.push_back(rnums[j++]);\n            }\n        }\n        while (i <= m-l) {\n            res.push_back(lnums[i++]);\n        }\n        while (j <= r-m-1) {\n            res.push_back(rnums[j++]);\n        }\n        return res;\n    }\n\n    vector<int> mergeSort(vector<int>& nums) {\n        int n = nums.size();\n        nums = mSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序 + 非递归（80 ms）\n    vector<int> mergeSortNR(vector<int>& nums) {\n        int n = nums.size();\n        for (int len = 1; len < n; len <<= 1) {\n            for (int l = 0; l < n-len; l += 2*len) {\n                int m = l+len-1;\n                int r = min(n-1, l+2*len-1);\n                vector<int> res;\n                int i = l, j = m+1;\n                while (i <= m && j <= r) {\n                    if (nums[i] < nums[j]) {\n                        res.push_back(nums[i++]);\n                    } else {\n                        res.push_back(nums[j++]);\n                    }\n                }\n                while (i <= m) {\n                    res.push_back(nums[i++]);\n                }\n                while (j <= r) {\n                    res.push_back(nums[j++]);\n                }\n                for (int i = l; i <= r; ++i) {\n                    nums[i] = res[i-l];\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 希尔排序（40 ms）\n    vector<int> shellSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int gap = n/2; gap > 0; gap /= 2) {\n            for (int i = gap; i < n; ++i) {\n                for (int j = i; j-gap >= 0 && nums[j-gap] > nums[j]; j -= gap) {\n                    swap(nums[j-gap], nums[j]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 计数排序（32 ms）\n    vector<int> countSort(vector<int>& nums) {\n        int n = nums.size();\n        if (!n) return {};\n        int minv = *min_element(nums.begin(), nums.end());\n        int maxv = *max_element(nums.begin(), nums.end());\n        int m = maxv-minv+1;\n        vector<int> count(m, 0);\n        for (int i = 0; i < n; ++i) {\n            count[nums[i]-minv]++;\n        }\n        vector<int> res;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < count[i]; ++j) {\n                res.push_back(i+minv);\n            }\n        }\n        return res;\n    }\n\n    // 基数排序（不适用于负数）\n    vector<int> radixSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int maxd = 0;\n        while (maxv > 0) {\n            maxv /= 10;\n            maxd++;\n        }\n        vector<int> count(10, 0), rank(n, 0);\n        int base = 1;\n        while (maxd > 0) {\n            count.assign(10, 0);\n            for (int i = 0; i < n; ++i) {\n                count[(nums[i]/base)%10]++;\n            }\n            for (int i = 1; i < 10; ++i) {\n                count[i] += count[i-1];\n            }\n            for (int i = n-1; i >= 0; --i) {\n                rank[--count[(nums[i]/base)%10]] = nums[i];\n            }\n            for (int i = 0; i < n; ++i) {\n                nums[i] = rank[i];\n            }\n            maxd--;\n            base *= 10;\n        }\n        return nums;\n    }\n\n    // 桶排序 (20 ms)\n    vector<int> bucketSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int minv = *min_element(nums.begin(), nums.end());\n        int bs = 1000;\n        int m = (maxv-minv)/bs+1;\n        vector<vector<int> > bucket(m);\n        for (int i = 0; i < n; ++i) {\n            bucket[(nums[i]-minv)/bs].push_back(nums[i]);\n        }\n        int idx = 0;\n        for (int i = 0; i < m; ++i) {\n            int sz = bucket[i].size();\n            bucket[i] = quickSort(bucket[i]);\n            for (int j = 0; j < sz; ++j) {\n                nums[idx++] = bucket[i][j];\n            }\n        }\n        return nums;\n    }\n\n    // 堆排序（32 ms）\n    void adjust(vector<int>& nums, int p, int s) {\n        while (2*p+1 < s) {\n            int c1 = 2*p+1;\n            int c2 = 2*p+2;\n            int c = (c2<s && nums[c2]>nums[c1]) ? c2 : c1;\n            if (nums[c] > nums[p]) swap(nums[c], nums[p]);\n            else break;\n            p = c;\n        }\n    }\n\n    vector<int> heapSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = n/2-1; i >= 0; --i) {\n            adjust(nums, i, n);\n        }\n        for (int i = n-1; i > 0; --i) {\n            swap(nums[0], nums[i]);\n            adjust(nums, 0, i);\n        }\n        return nums;\n    }\n};\n```","source":"_posts/sort-algorithms.md","raw":"---\ntitle: 十大经典排序算法整理汇总（附代码）\ntop: true\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-02-16 15:09:23\npassword:\nsummary: 本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。\ntags:\n- leetcode\n- 算法\ncategories:\n- 编程算法\n---\n\n> 关注公众号【算法码上来】，每日算法干货马上就来！\n\n![](/medias/contact.jpg)\n\n## 前言\n\n本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。\n\n**本文并不会详细讲解每种排序算法的原理**，网上有很多很好的教程，大家可以自己去搜了看。\n\n最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 [LeetCode 912. 排序数组](https://leetcode-cn.com/problems/sort-an-array/ \"LeetCode 912. 排序数组\") 这道题。\n\n## 性质汇总\n\n> 如果发现表中有错误，请留言告知。\n\n|   算法  |   最好  |  最坏   |  平均   |  空间   |  稳定性   | 是否基于比较\n| --- | --- | --- | --- | --- | :---: | :---: |\n|  冒泡排序   |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|   选择排序  |  $O(n^2)$  |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\times$  | $\\checkmark$ |\n|   插入排序  |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|  快速排序   |  $O(n\\log n)$   |  $O(n^2)$   |  $O(n\\log n)$   |  $O(\\log n)$~$O(n)$   |  $\\times$   | $\\checkmark$ |\n|  归并排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(n)$  |  $\\checkmark$   | $\\checkmark$ |\n|   希尔排序  |  $O(n^{1.3})$   |   $O(n^2)$  |  $O(n\\log n)$~$O(n^2)$   |  $O(1)$   | $\\times$    | $\\checkmark$ |\n|  计数排序   |  $O(n+k)$   |   $O(n+k)$  |   $O(n+k)$  |  $O(n+k)$   |  $\\checkmark$   | $\\times$ |\n|   基数排序  |   $O(nk)$  |  $O(nk)$   |   $O(nk)$  |   $O(n+k)$  |  $\\checkmark$   | $\\times$ |\n|  桶排序   |   $O(n)$  |   $O(n)$  |   $O(n)$  |  $O(n+m)$   |  $\\checkmark$   | $\\times$ |\n|  堆排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(1)$  |  $\\times$   | $\\checkmark$ |\n\n\n\n> 如果表格显示有问题的话，还可以直接看下面的汇总图：\n\n![十大经典排序算法性质汇总](1.png)\n\n### 维基百科\n\n我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。\n\n**冒泡排序**  \n[https://en.wikipedia.org/wiki/Bubble_sort](https://en.wikipedia.org/wiki/Bubble_sort)\n\n**选择排序**  \n[https://en.wikipedia.org/wiki/Selection_sort](https://en.wikipedia.org/wiki/Selection_sort)\n\n**插入排序**  \n[https://en.wikipedia.org/wiki/Insertion_sort](https://en.wikipedia.org/wiki/Insertion_sort)\n\n**快速排序**  \n[https://en.wikipedia.org/wiki/Quicksort](https://en.wikipedia.org/wiki/Quicksort)\n\n**归并排序**  \n[https://en.wikipedia.org/wiki/Merge_sort](https://en.wikipedia.org/wiki/Merge_sort)\n\n**希尔排序**  \n[https://en.wikipedia.org/wiki/Shellsort](https://en.wikipedia.org/wiki/Shellsort)\n\n**计数排序**  \n[https://en.wikipedia.org/wiki/Counting_sort](https://en.wikipedia.org/wiki/Counting_sort)\n\n**基数排序**  \n[https://en.wikipedia.org/wiki/Radix_sort](https://en.wikipedia.org/wiki/Radix_sort)\n\n**桶排序**  \n[https://en.wikipedia.org/wiki/Bucket_sort](https://en.wikipedia.org/wiki/Bucket_sort)\n\n**堆排序**  \n[https://en.wikipedia.org/wiki/Heapsort](https://en.wikipedia.org/wiki/Heapsort)\n\n## 代码实现\n\n所有的排序算法接口都是相同的，也就是 `vector<int> xxxSort(vector<int>& nums)` 。只需要你传入一个 `vector<int>` 类型的数组，就能返回排序后的结果。\n\n运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。\n\n```cpp\nclass Solution {\npublic:\n    vector<int> sortArray(vector<int>& nums) {\n        return quickSort(nums);\n    }\n\n    // 冒泡排序（超时）\n    vector<int> bubbleSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = n-2; j >= i; --j) {\n                if (nums[j] > nums[j+1]) {\n                    swap(nums[j], nums[j+1]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 选择排序（超时）\n    vector<int> selectSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            int idx = i;\n            for (int j = i; j < n; ++j) {\n                if (nums[j] < nums[idx]) {\n                    idx = j;\n                }\n            }\n            swap(nums[i], nums[idx]);\n        }\n        return nums;\n    }\n\n    // 插入排序（超时）\n    vector<int> insertSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = i; j > 0 && nums[j] < nums[j-1]; --j) {\n                swap(nums[j], nums[j-1]);\n            }\n        }\n        return nums;\n    }\n\n    // 快速排序（24 ms）\n    void qSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return;\n        int m = l;\n        for (int i = l; i < r; ++i) {\n            if (nums[i] < nums[r]) {\n                swap(nums[m++], nums[i]);\n            }\n        }\n        swap(nums[m], nums[r]);\n        qSort(nums, l, m-1);\n        qSort(nums, m+1, r);\n    }\n\n    vector<int> quickSort(vector<int>& nums) {\n        int n = nums.size();\n        qSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序（192 ms）\n    vector<int> mSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return {nums[l]};\n        int m = l+(r-l)/2;\n        vector<int> lnums = mSort(nums, l, m);\n        vector<int> rnums = mSort(nums, m+1, r);\n        vector<int> res;\n        int i = 0, j = 0;\n        while (i <= m-l && j <= r-m-1) {\n            if (lnums[i] < rnums[j]) {\n                res.push_back(lnums[i++]);\n            } else {\n                res.push_back(rnums[j++]);\n            }\n        }\n        while (i <= m-l) {\n            res.push_back(lnums[i++]);\n        }\n        while (j <= r-m-1) {\n            res.push_back(rnums[j++]);\n        }\n        return res;\n    }\n\n    vector<int> mergeSort(vector<int>& nums) {\n        int n = nums.size();\n        nums = mSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序 + 非递归（80 ms）\n    vector<int> mergeSortNR(vector<int>& nums) {\n        int n = nums.size();\n        for (int len = 1; len < n; len <<= 1) {\n            for (int l = 0; l < n-len; l += 2*len) {\n                int m = l+len-1;\n                int r = min(n-1, l+2*len-1);\n                vector<int> res;\n                int i = l, j = m+1;\n                while (i <= m && j <= r) {\n                    if (nums[i] < nums[j]) {\n                        res.push_back(nums[i++]);\n                    } else {\n                        res.push_back(nums[j++]);\n                    }\n                }\n                while (i <= m) {\n                    res.push_back(nums[i++]);\n                }\n                while (j <= r) {\n                    res.push_back(nums[j++]);\n                }\n                for (int i = l; i <= r; ++i) {\n                    nums[i] = res[i-l];\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 希尔排序（40 ms）\n    vector<int> shellSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int gap = n/2; gap > 0; gap /= 2) {\n            for (int i = gap; i < n; ++i) {\n                for (int j = i; j-gap >= 0 && nums[j-gap] > nums[j]; j -= gap) {\n                    swap(nums[j-gap], nums[j]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 计数排序（32 ms）\n    vector<int> countSort(vector<int>& nums) {\n        int n = nums.size();\n        if (!n) return {};\n        int minv = *min_element(nums.begin(), nums.end());\n        int maxv = *max_element(nums.begin(), nums.end());\n        int m = maxv-minv+1;\n        vector<int> count(m, 0);\n        for (int i = 0; i < n; ++i) {\n            count[nums[i]-minv]++;\n        }\n        vector<int> res;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < count[i]; ++j) {\n                res.push_back(i+minv);\n            }\n        }\n        return res;\n    }\n\n    // 基数排序（不适用于负数）\n    vector<int> radixSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int maxd = 0;\n        while (maxv > 0) {\n            maxv /= 10;\n            maxd++;\n        }\n        vector<int> count(10, 0), rank(n, 0);\n        int base = 1;\n        while (maxd > 0) {\n            count.assign(10, 0);\n            for (int i = 0; i < n; ++i) {\n                count[(nums[i]/base)%10]++;\n            }\n            for (int i = 1; i < 10; ++i) {\n                count[i] += count[i-1];\n            }\n            for (int i = n-1; i >= 0; --i) {\n                rank[--count[(nums[i]/base)%10]] = nums[i];\n            }\n            for (int i = 0; i < n; ++i) {\n                nums[i] = rank[i];\n            }\n            maxd--;\n            base *= 10;\n        }\n        return nums;\n    }\n\n    // 桶排序 (20 ms)\n    vector<int> bucketSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int minv = *min_element(nums.begin(), nums.end());\n        int bs = 1000;\n        int m = (maxv-minv)/bs+1;\n        vector<vector<int> > bucket(m);\n        for (int i = 0; i < n; ++i) {\n            bucket[(nums[i]-minv)/bs].push_back(nums[i]);\n        }\n        int idx = 0;\n        for (int i = 0; i < m; ++i) {\n            int sz = bucket[i].size();\n            bucket[i] = quickSort(bucket[i]);\n            for (int j = 0; j < sz; ++j) {\n                nums[idx++] = bucket[i][j];\n            }\n        }\n        return nums;\n    }\n\n    // 堆排序（32 ms）\n    void adjust(vector<int>& nums, int p, int s) {\n        while (2*p+1 < s) {\n            int c1 = 2*p+1;\n            int c2 = 2*p+2;\n            int c = (c2<s && nums[c2]>nums[c1]) ? c2 : c1;\n            if (nums[c] > nums[p]) swap(nums[c], nums[p]);\n            else break;\n            p = c;\n        }\n    }\n\n    vector<int> heapSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = n/2-1; i >= 0; --i) {\n            adjust(nums, i, n);\n        }\n        for (int i = n-1; i > 0; --i) {\n            swap(nums[0], nums[i]);\n            adjust(nums, 0, i);\n        }\n        return nums;\n    }\n};\n```","slug":"sort-algorithms","published":1,"updated":"2020-04-28T08:07:07.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9lgzujh0002i02acp5jm2ew","content":"<blockquote>\n<p>关注公众号【算法码上来】，每日算法干货马上就来！</p>\n</blockquote>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n<h2><span id=\"前言\">前言</span></h2><p>本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。</p>\n<p><strong>本文并不会详细讲解每种排序算法的原理</strong>，网上有很多很好的教程，大家可以自己去搜了看。</p>\n<p>最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 <a href=\"https://leetcode-cn.com/problems/sort-an-array/\" title=\"LeetCode 912. 排序数组\" target=\"_blank\" rel=\"noopener\">LeetCode 912. 排序数组</a> 这道题。</p>\n<h2><span id=\"性质汇总\">性质汇总</span></h2><blockquote>\n<p>如果发现表中有错误，请留言告知。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>算法</th>\n<th>最好</th>\n<th>最坏</th>\n<th>平均</th>\n<th>空间</th>\n<th align=\"center\">稳定性</th>\n<th align=\"center\">是否基于比较</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>冒泡排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>选择排序</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>插入排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>快速排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(\\log n)$~$O(n)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>希尔排序</td>\n<td>$O(n^{1.3})$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$~$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>计数排序</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>基数排序</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>桶排序</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n+m)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>堆排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果表格显示有问题的话，还可以直接看下面的汇总图：</p>\n</blockquote>\n<p><img src=\"1.png\" alt=\"十大经典排序算法性质汇总\"></p>\n<h3><span id=\"维基百科\">维基百科</span></h3><p>我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。</p>\n<p><strong>冒泡排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bubble_sort</a></p>\n<p><strong>选择排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Selection_sort</a></p>\n<p><strong>插入排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Insertion_sort</a></p>\n<p><strong>快速排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Quicksort</a></p>\n<p><strong>归并排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Merge_sort</a></p>\n<p><strong>希尔排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Shellsort</a></p>\n<p><strong>计数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Counting_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Counting_sort</a></p>\n<p><strong>基数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Radix_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Radix_sort</a></p>\n<p><strong>桶排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bucket_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bucket_sort</a></p>\n<p><strong>堆排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Heapsort</a></p>\n<h2><span id=\"代码实现\">代码实现</span></h2><p>所有的排序算法接口都是相同的，也就是 <code>vector&lt;int&gt; xxxSort(vector&lt;int&gt;&amp; nums)</code> 。只需要你传入一个 <code>vector&lt;int&gt;</code> 类型的数组，就能返回排序后的结果。</p>\n<p>运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。</p>\n<pre class=\"line-numbers language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">sortArray</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 冒泡排序（超时）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> n<span class=\"token number\">-2</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> i<span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 选择排序（超时）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">selectSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    idx <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 插入排序（超时）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">insertSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 快速排序（24 ms）</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>m<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> m<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 归并排序（192 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>nums<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> l<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span>l<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> lnums <span class=\"token operator\">=</span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> rnums <span class=\"token operator\">=</span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m<span class=\"token operator\">-</span>l <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> r<span class=\"token operator\">-</span>m<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lnums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> rnums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>lnums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>rnums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m<span class=\"token operator\">-</span>l<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>lnums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> r<span class=\"token operator\">-</span>m<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>rnums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nums <span class=\"token operator\">=</span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 归并排序 + 非递归（80 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mergeSortNR</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> len <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> len <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l <span class=\"token operator\">&lt;</span> n<span class=\"token operator\">-</span>len<span class=\"token punctuation\">;</span> l <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>len<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> l<span class=\"token operator\">+</span>len<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>n<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span> l<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>len<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                        res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 希尔排序（40 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">shellSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> gap <span class=\"token operator\">=</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> gap <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> gap <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> gap<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">-</span>gap <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span>gap<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">-</span><span class=\"token operator\">=</span> gap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span>gap<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 计数排序（32 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">countSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> minv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">min_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> maxv<span class=\"token operator\">-</span>minv<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            count<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>minv<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>minv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 基数排序（不适用于负数）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">radixSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>maxv <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            maxv <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n            maxd<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rank</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> base <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>maxd <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            count<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                count<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>base<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> count<span class=\"token punctuation\">[</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                rank<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>count<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>base<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rank<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            maxd<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            base <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 桶排序 (20 ms)</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">bucketSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> minv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">min_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> bs <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>maxv<span class=\"token operator\">-</span>minv<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>bs<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">></span> <span class=\"token function\">bucket</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bucket<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>minv<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>bs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> sz <span class=\"token operator\">=</span> bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> sz<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                nums<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 堆排序（32 ms）</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> c1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> c2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c2<span class=\"token operator\">&lt;</span>s <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>c2<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>nums<span class=\"token punctuation\">[</span>c1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> c2 <span class=\"token operator\">:</span> c1<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            p <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">heapSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":"<blockquote>\n<p>关注公众号【算法码上来】，每日算法干货马上就来！</p>\n</blockquote>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。</p>\n<p><strong>本文并不会详细讲解每种排序算法的原理</strong>，网上有很多很好的教程，大家可以自己去搜了看。</p>\n<p>最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 <a href=\"https://leetcode-cn.com/problems/sort-an-array/\" title=\"LeetCode 912. 排序数组\" target=\"_blank\" rel=\"noopener\">LeetCode 912. 排序数组</a> 这道题。</p>\n<h2 id=\"性质汇总\"><a href=\"#性质汇总\" class=\"headerlink\" title=\"性质汇总\"></a>性质汇总</h2><blockquote>\n<p>如果发现表中有错误，请留言告知。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>算法</th>\n<th>最好</th>\n<th>最坏</th>\n<th>平均</th>\n<th>空间</th>\n<th align=\"center\">稳定性</th>\n<th align=\"center\">是否基于比较</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>冒泡排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>选择排序</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>插入排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>快速排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(\\log n)$~$O(n)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>希尔排序</td>\n<td>$O(n^{1.3})$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$~$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>计数排序</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>基数排序</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>桶排序</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n+m)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>堆排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果表格显示有问题的话，还可以直接看下面的汇总图：</p>\n</blockquote>\n<p><img src=\"1.png\" alt=\"十大经典排序算法性质汇总\"></p>\n<h3 id=\"维基百科\"><a href=\"#维基百科\" class=\"headerlink\" title=\"维基百科\"></a>维基百科</h3><p>我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。</p>\n<p><strong>冒泡排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bubble_sort</a></p>\n<p><strong>选择排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Selection_sort</a></p>\n<p><strong>插入排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Insertion_sort</a></p>\n<p><strong>快速排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Quicksort</a></p>\n<p><strong>归并排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Merge_sort</a></p>\n<p><strong>希尔排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Shellsort</a></p>\n<p><strong>计数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Counting_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Counting_sort</a></p>\n<p><strong>基数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Radix_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Radix_sort</a></p>\n<p><strong>桶排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bucket_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bucket_sort</a></p>\n<p><strong>堆排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Heapsort</a></p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>所有的排序算法接口都是相同的，也就是 <code>vector&lt;int&gt; xxxSort(vector&lt;int&gt;&amp; nums)</code> 。只需要你传入一个 <code>vector&lt;int&gt;</code> 类型的数组，就能返回排序后的结果。</p>\n<p>运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。</p>\n<pre><code class=\"cpp\">class Solution {\npublic:\n    vector&lt;int&gt; sortArray(vector&lt;int&gt;&amp; nums) {\n        return quickSort(nums);\n    }\n\n    // 冒泡排序（超时）\n    vector&lt;int&gt; bubbleSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; ++i) {\n            for (int j = n-2; j &gt;= i; --j) {\n                if (nums[j] &gt; nums[j+1]) {\n                    swap(nums[j], nums[j+1]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 选择排序（超时）\n    vector&lt;int&gt; selectSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; ++i) {\n            int idx = i;\n            for (int j = i; j &lt; n; ++j) {\n                if (nums[j] &lt; nums[idx]) {\n                    idx = j;\n                }\n            }\n            swap(nums[i], nums[idx]);\n        }\n        return nums;\n    }\n\n    // 插入排序（超时）\n    vector&lt;int&gt; insertSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; ++i) {\n            for (int j = i; j &gt; 0 &amp;&amp; nums[j] &lt; nums[j-1]; --j) {\n                swap(nums[j], nums[j-1]);\n            }\n        }\n        return nums;\n    }\n\n    // 快速排序（24 ms）\n    void qSort(vector&lt;int&gt;&amp; nums, int l, int r) {\n        if (l &gt;= r) return;\n        int m = l;\n        for (int i = l; i &lt; r; ++i) {\n            if (nums[i] &lt; nums[r]) {\n                swap(nums[m++], nums[i]);\n            }\n        }\n        swap(nums[m], nums[r]);\n        qSort(nums, l, m-1);\n        qSort(nums, m+1, r);\n    }\n\n    vector&lt;int&gt; quickSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        qSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序（192 ms）\n    vector&lt;int&gt; mSort(vector&lt;int&gt;&amp; nums, int l, int r) {\n        if (l &gt;= r) return {nums[l]};\n        int m = l+(r-l)/2;\n        vector&lt;int&gt; lnums = mSort(nums, l, m);\n        vector&lt;int&gt; rnums = mSort(nums, m+1, r);\n        vector&lt;int&gt; res;\n        int i = 0, j = 0;\n        while (i &lt;= m-l &amp;&amp; j &lt;= r-m-1) {\n            if (lnums[i] &lt; rnums[j]) {\n                res.push_back(lnums[i++]);\n            } else {\n                res.push_back(rnums[j++]);\n            }\n        }\n        while (i &lt;= m-l) {\n            res.push_back(lnums[i++]);\n        }\n        while (j &lt;= r-m-1) {\n            res.push_back(rnums[j++]);\n        }\n        return res;\n    }\n\n    vector&lt;int&gt; mergeSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        nums = mSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序 + 非递归（80 ms）\n    vector&lt;int&gt; mergeSortNR(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int len = 1; len &lt; n; len &lt;&lt;= 1) {\n            for (int l = 0; l &lt; n-len; l += 2*len) {\n                int m = l+len-1;\n                int r = min(n-1, l+2*len-1);\n                vector&lt;int&gt; res;\n                int i = l, j = m+1;\n                while (i &lt;= m &amp;&amp; j &lt;= r) {\n                    if (nums[i] &lt; nums[j]) {\n                        res.push_back(nums[i++]);\n                    } else {\n                        res.push_back(nums[j++]);\n                    }\n                }\n                while (i &lt;= m) {\n                    res.push_back(nums[i++]);\n                }\n                while (j &lt;= r) {\n                    res.push_back(nums[j++]);\n                }\n                for (int i = l; i &lt;= r; ++i) {\n                    nums[i] = res[i-l];\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 希尔排序（40 ms）\n    vector&lt;int&gt; shellSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int gap = n/2; gap &gt; 0; gap /= 2) {\n            for (int i = gap; i &lt; n; ++i) {\n                for (int j = i; j-gap &gt;= 0 &amp;&amp; nums[j-gap] &gt; nums[j]; j -= gap) {\n                    swap(nums[j-gap], nums[j]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 计数排序（32 ms）\n    vector&lt;int&gt; countSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        if (!n) return {};\n        int minv = *min_element(nums.begin(), nums.end());\n        int maxv = *max_element(nums.begin(), nums.end());\n        int m = maxv-minv+1;\n        vector&lt;int&gt; count(m, 0);\n        for (int i = 0; i &lt; n; ++i) {\n            count[nums[i]-minv]++;\n        }\n        vector&lt;int&gt; res;\n        for (int i = 0; i &lt; m; ++i) {\n            for (int j = 0; j &lt; count[i]; ++j) {\n                res.push_back(i+minv);\n            }\n        }\n        return res;\n    }\n\n    // 基数排序（不适用于负数）\n    vector&lt;int&gt; radixSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int maxd = 0;\n        while (maxv &gt; 0) {\n            maxv /= 10;\n            maxd++;\n        }\n        vector&lt;int&gt; count(10, 0), rank(n, 0);\n        int base = 1;\n        while (maxd &gt; 0) {\n            count.assign(10, 0);\n            for (int i = 0; i &lt; n; ++i) {\n                count[(nums[i]/base)%10]++;\n            }\n            for (int i = 1; i &lt; 10; ++i) {\n                count[i] += count[i-1];\n            }\n            for (int i = n-1; i &gt;= 0; --i) {\n                rank[--count[(nums[i]/base)%10]] = nums[i];\n            }\n            for (int i = 0; i &lt; n; ++i) {\n                nums[i] = rank[i];\n            }\n            maxd--;\n            base *= 10;\n        }\n        return nums;\n    }\n\n    // 桶排序 (20 ms)\n    vector&lt;int&gt; bucketSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int minv = *min_element(nums.begin(), nums.end());\n        int bs = 1000;\n        int m = (maxv-minv)/bs+1;\n        vector&lt;vector&lt;int&gt; &gt; bucket(m);\n        for (int i = 0; i &lt; n; ++i) {\n            bucket[(nums[i]-minv)/bs].push_back(nums[i]);\n        }\n        int idx = 0;\n        for (int i = 0; i &lt; m; ++i) {\n            int sz = bucket[i].size();\n            bucket[i] = quickSort(bucket[i]);\n            for (int j = 0; j &lt; sz; ++j) {\n                nums[idx++] = bucket[i][j];\n            }\n        }\n        return nums;\n    }\n\n    // 堆排序（32 ms）\n    void adjust(vector&lt;int&gt;&amp; nums, int p, int s) {\n        while (2*p+1 &lt; s) {\n            int c1 = 2*p+1;\n            int c2 = 2*p+2;\n            int c = (c2&lt;s &amp;&amp; nums[c2]&gt;nums[c1]) ? c2 : c1;\n            if (nums[c] &gt; nums[p]) swap(nums[c], nums[p]);\n            else break;\n            p = c;\n        }\n    }\n\n    vector&lt;int&gt; heapSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = n/2-1; i &gt;= 0; --i) {\n            adjust(nums, i, n);\n        }\n        for (int i = n-1; i &gt; 0; --i) {\n            swap(nums[0], nums[i]);\n            adjust(nums, 0, i);\n        }\n        return nums;\n    }\n};</code></pre>\n"},{"title":"如何培养受欢迎的孩子--1.人格独立是真正受欢迎的根基","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-04-28T10:28:43.000Z","password":null,"summary":null,"_content":"\n# 如何培养受欢迎的孩子--人格独立是真正受欢迎的根基？\n\n第一讲，我要帮你树立一个观点，人格独立才是受欢迎的前提。\n\n这一讲里，我就重点和你说说怎么在人格独立的基础上。用三个办法培养孩子的受欢迎能力。这三个办法分别是：\n\n1. 优势游戏法\n\n2. 理性反馈法\n\n3. 15秒钟积极转念法\n\n如果你的孩子上过或者正在上幼儿园，是不是每个幼儿园都有这样两种孩子。\n\n一种孩子，比较强势，喜欢发号施令，在班里说_不二；\n\n另外一种孩子，每说一句话都要看看别人的反应，他们希望别人喜欢自己，不喜欢和任何人发生冲突。\n\n这两种孩子看上去人缘都很好，但这不是我要说的真正受欢迎的孩子。\n\n这两种孩子，前一种孩子，长大后，可能因为强势的性格和霸道的作风，变得并不讨人喜欢；而后一种孩子长大后，很可能会成为别人眼中的老好人，一味迎合别人，最终会失去自己。\n\n什么是人格独立呢？\n\n我来给你讲一个我自己经历过的故事。\n\n我刚进哈佛商学院时，前三周是基础课，各种课程和班级都是随机安排的，这就给了大家一个互相认识的好机会。\n\n跟不同国籍、背景的同学交流，我最大的感受是，真正受欢迎的人，在人际交往中体现出的真诚、自信，不是以外界反馈、别人评价为基础的，而是骨子里对自己有什么优势、哪里有短板认识得很清楚。\n\n这种特质就是人格独立。\n\n可以说，人格独立是受欢迎的基础。只有当一个人实现了人格独立，他的自信才能内化成一种个人魅力，不会随着外部环境和评价的变化而变化。\n\n缺乏独立人格，也正是霸王型或讨好型孩子，长大以后不能持续受欢迎的真正原因。\n\n### 独立人格三要素\n\n拥有独立人格，有这样三个要素：自我认知，接受反馈的能力和抵抗挫折的能力。\n\n1. 自我认知：\n\n这是指能够清楚地知道自己是谁，对自己兴趣和能力的边界有清晰的认知。\n\n2. 接受反馈的能力：\n\n反馈就有正面和负面。如何看待这些反馈，尤其是负面反馈，是独立人格的重要表现。\n\n如果一被夸奖就高兴，一被否定就不开心，这样的孩子长大后，很容易成为以自我为中心的\"霸王型\"，或是完全没有主见的\"讨好型\"。\n\n3. 抵抗挫折的能力：\n\n它是独立人格形成的重要保障。抵抗挫折的能力是指孩子在遇到挫折的时候，能正视困难，不轻易否定自己，可以像不倒翁一样，跌倒了再爬起来。\n\n针对这三个要素，接下来，我和你重点说说培养孩子独立人格的二个方法。\n\n### 方法一：优势链+成就箱\n\n家长的认知和孩子的优势之间，是有偏差的。有时你觉得孩子喜欢唱歌跳舞，其实他们只是想要讨好你。你认为孩子弹琴有天赋，他们只是为了通过考级而不得不完成任务。\n\n所以，我给你的建议是，与其一厢情愿地帮孩子开发兴趣和潜力，不如用游戏的方式鼓励孩子去发现、确认自己的优势，并从中犹得乐趣。\n\n在这里，我给你推荐两个简单的小游戏，一个是优势链，一个是成就箱。\n\n1. 优势链\n\n首先，你要让孩子把自己的优势写在彩色的纸条上，把纸条粘成一个圈，然后把所有的优势一个套一个地串起来，做成孩子的\"优势链\"。\n\n从戴在手腕上的\"手链”，到挂在脖子上的\"项链”。优势链越长，越能玩出更多的花样。除了在上面写字，还可以画画、涂色等。\n\n这个游戏隔一段时间就可以做一次。每制作一条优势链，就可以把之前做的拿出来比较一下，看看新增了哪些优势。然后放在一起，让孩子通过链条的长短、花样等，看到自己不同阶段的成长。\n\n孩子写下自己的优势时，你可以在旁边引导，\"会画画......嗯，没错，你上次画的那条美人鱼真的很漂亮。\"\"吃饭很快......为什么你觉得吃饭快是个优势呢？说来听听吧.....\n\n像这样，一边念出孩子写下的优势，一边跟他讨论、回忆具体细节，你会逐渐发现孩子真正的兴趣和潜力在哪里。这个游戏的过程，不但帮孩子认识到自己的优势，还帮助他表达、确认了自己的优势。\n\n2. 成就箱\n\n从读小学起，我就让两个孩子做了自己的成就箱，拿普通的装纸巾的盒子就可以。他们把学习、生活中取得的任何成绩或进步，都写成纸条放进去。\n\n比如，\"我在学校帮助小朋友找到教室\"，\"我记得收拾自己的碗筷\"，\"我今天问了老师一个不懂的问题\"等等，都可以成为小纸条的内容。\n\n等到成就箱被装满，我会跟孩子一起，先把纸条掏出来，大声读出上面的字，然后跟孩子一起回忆纸条上发生的事情，再把纸条分类。\n\n比如，帮助别人的放一堆，学习进步的放一堆。这样就很容易看出哪些事情做得比较好，哪些还有待加强。\n\n慢慢的，你就会发现，这些看起来小小的“成就纸条\"，推动着孩子不断进步和提高。随着成就箱一点点被填满，孩子的自信会一点点增长，对随时随地发挥优势也会更加乐此不疲。\n\n### 方法二：学会理性反馈\n\n主要有两点，一是，如何面对正面反懐，二是，如何面对负面反馈。\n\n听到别人夸奖自己时，咱们中国人往往会谦虚一下：\"哪里哪里？我还差得远呢。\"可是，这样的教育方式，不利于孩子培养自己的自信，也不真诚。\n\n1. 怎样教孩子面对别人的称赞呢？\n\n我的做法是，鼓励孩子在听到夸奖时，除了说\"谢谢！\"还要尽量多说一些细节。比如\"谢谢！我真的很努力！”或者说：\"谢谢!这次比赛我真的很重视，每天都练习，得到了好结果，我也很高兴。”\n\n这样的回答，既显示出孩子的自信，也能引发孩子继续思考，对方这么说是出于礼貌，还是真的觉得自己做得好。\n\n2. 怎样教孩子面对负面、消极反馈？\n\n同样的道理，当孩子听到来自他人的负面、消极的反馈时，你也要注意引导他们回忆当时的场景，思考为什么会有这样的评价。然后跟孩子讨论，而不是盲目地维护或教育孩子。\n\n当孩子还原出整个过程，得出了自己的结论，你再顺着他的思路告诉孩子，不要因为别人说了自己不好的地方，就否定自己。\n\n用学习的心态问问自己：别人为什么会这样说？如果是真正的错误或者缺点，那就需要改正。如果是出于误解、妒忌或者只是因为对方情绪不好，脱口而出的话，那\n\n从理性分析的角度出发，认真客观地对待自己的优势和缺点，任何负面的经历都可以转化成正面积极的学习的过程，孩子也会更加自信。\n\n### 方法三：15秒积极转念法\n\n孩子在家或者学校都难免遇到困难和挫折，有可能是同学的孤立，学习上的难题，也可能是遭遇到失败和恐惧。我来给你讲讲用15秒钟积极转念法怎么做。\n\n这个方法可以分成三步：\n\n第一步，是当孩子经历负面情绪时，我会鼓励他_边深呼吸，一边在心里默默数15秒，利用这段时间来让自己冷静降温；\n\n第二步，再用15秒，尽情地把负面情绪表达出来。比如\"我不喜欢某某，他让我难堪弟弟真讨厌，他烦死了\"；\"数学作业太难了，让我心烦。\"\n\n第三步，我会引导孩子在头脑中想象一个他喜欢的画面，画面可以是阳光、海水、沙滩，或者全家一起骑自行车、玩游戏等等。\n\n如果孩子不愿意配合，他会说：\"我还在生气，根本想不出什么美好的事情！\"所以，你要注意，做这个练习，平时就需要有意识地引导孩子去积累一些美好记忆。\n\n比如，我家老大常说，小时候有一次我们在餐馆的尽情逗笑，是他最美好的记忆。后来，在他生气或者沮丧要转念的时候，我就提醒他赶快在脑子里换频道，播放这个美好的记忆画面。\n\n这个过程刚开始有点难，但我不断坚持帮他回忆当时的一些画面场景。慢慢的，他平静下来，最后顺利地从坏情绪中抽离出来。\n\n### —♦本讲小结♦—\n\n你首先知道了孩子的独立人格是受欢迎的基础，如果没有独立人格，孩子长大后很容易迷失自己，不再受欢迎。\n\n你又收获了培养独立人格的三个方法：\n\n方法一，你可以通过优势链和成就箱两个小游戏帮孩子找到优势；\n\n方法二，教孩子理性看待反馈，尤其是负面反馈。\n\n方法三，可以用15秒积极转念法帮助孩子提高抵抗挫折的能力。\n\n小作业：\n\n用我教你的方法，帮助孩子一起做一个优势链。在制作的过程中，孩子是什么样的反应，你有什么心得和体会，请写在留言区里，和我互动。期待看到你的留言。\n\n","source":"_posts/人格独立是真正受欢迎的根基.md","raw":"---\ntitle: 如何培养受欢迎的孩子--1.人格独立是真正受欢迎的根基\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-04-28 18:28:43\npassword:\nsummary:\ntags: \n    亲子教育\ncategories:\n    亲子教育\n---\n\n# 如何培养受欢迎的孩子--人格独立是真正受欢迎的根基？\n\n第一讲，我要帮你树立一个观点，人格独立才是受欢迎的前提。\n\n这一讲里，我就重点和你说说怎么在人格独立的基础上。用三个办法培养孩子的受欢迎能力。这三个办法分别是：\n\n1. 优势游戏法\n\n2. 理性反馈法\n\n3. 15秒钟积极转念法\n\n如果你的孩子上过或者正在上幼儿园，是不是每个幼儿园都有这样两种孩子。\n\n一种孩子，比较强势，喜欢发号施令，在班里说_不二；\n\n另外一种孩子，每说一句话都要看看别人的反应，他们希望别人喜欢自己，不喜欢和任何人发生冲突。\n\n这两种孩子看上去人缘都很好，但这不是我要说的真正受欢迎的孩子。\n\n这两种孩子，前一种孩子，长大后，可能因为强势的性格和霸道的作风，变得并不讨人喜欢；而后一种孩子长大后，很可能会成为别人眼中的老好人，一味迎合别人，最终会失去自己。\n\n什么是人格独立呢？\n\n我来给你讲一个我自己经历过的故事。\n\n我刚进哈佛商学院时，前三周是基础课，各种课程和班级都是随机安排的，这就给了大家一个互相认识的好机会。\n\n跟不同国籍、背景的同学交流，我最大的感受是，真正受欢迎的人，在人际交往中体现出的真诚、自信，不是以外界反馈、别人评价为基础的，而是骨子里对自己有什么优势、哪里有短板认识得很清楚。\n\n这种特质就是人格独立。\n\n可以说，人格独立是受欢迎的基础。只有当一个人实现了人格独立，他的自信才能内化成一种个人魅力，不会随着外部环境和评价的变化而变化。\n\n缺乏独立人格，也正是霸王型或讨好型孩子，长大以后不能持续受欢迎的真正原因。\n\n### 独立人格三要素\n\n拥有独立人格，有这样三个要素：自我认知，接受反馈的能力和抵抗挫折的能力。\n\n1. 自我认知：\n\n这是指能够清楚地知道自己是谁，对自己兴趣和能力的边界有清晰的认知。\n\n2. 接受反馈的能力：\n\n反馈就有正面和负面。如何看待这些反馈，尤其是负面反馈，是独立人格的重要表现。\n\n如果一被夸奖就高兴，一被否定就不开心，这样的孩子长大后，很容易成为以自我为中心的\"霸王型\"，或是完全没有主见的\"讨好型\"。\n\n3. 抵抗挫折的能力：\n\n它是独立人格形成的重要保障。抵抗挫折的能力是指孩子在遇到挫折的时候，能正视困难，不轻易否定自己，可以像不倒翁一样，跌倒了再爬起来。\n\n针对这三个要素，接下来，我和你重点说说培养孩子独立人格的二个方法。\n\n### 方法一：优势链+成就箱\n\n家长的认知和孩子的优势之间，是有偏差的。有时你觉得孩子喜欢唱歌跳舞，其实他们只是想要讨好你。你认为孩子弹琴有天赋，他们只是为了通过考级而不得不完成任务。\n\n所以，我给你的建议是，与其一厢情愿地帮孩子开发兴趣和潜力，不如用游戏的方式鼓励孩子去发现、确认自己的优势，并从中犹得乐趣。\n\n在这里，我给你推荐两个简单的小游戏，一个是优势链，一个是成就箱。\n\n1. 优势链\n\n首先，你要让孩子把自己的优势写在彩色的纸条上，把纸条粘成一个圈，然后把所有的优势一个套一个地串起来，做成孩子的\"优势链\"。\n\n从戴在手腕上的\"手链”，到挂在脖子上的\"项链”。优势链越长，越能玩出更多的花样。除了在上面写字，还可以画画、涂色等。\n\n这个游戏隔一段时间就可以做一次。每制作一条优势链，就可以把之前做的拿出来比较一下，看看新增了哪些优势。然后放在一起，让孩子通过链条的长短、花样等，看到自己不同阶段的成长。\n\n孩子写下自己的优势时，你可以在旁边引导，\"会画画......嗯，没错，你上次画的那条美人鱼真的很漂亮。\"\"吃饭很快......为什么你觉得吃饭快是个优势呢？说来听听吧.....\n\n像这样，一边念出孩子写下的优势，一边跟他讨论、回忆具体细节，你会逐渐发现孩子真正的兴趣和潜力在哪里。这个游戏的过程，不但帮孩子认识到自己的优势，还帮助他表达、确认了自己的优势。\n\n2. 成就箱\n\n从读小学起，我就让两个孩子做了自己的成就箱，拿普通的装纸巾的盒子就可以。他们把学习、生活中取得的任何成绩或进步，都写成纸条放进去。\n\n比如，\"我在学校帮助小朋友找到教室\"，\"我记得收拾自己的碗筷\"，\"我今天问了老师一个不懂的问题\"等等，都可以成为小纸条的内容。\n\n等到成就箱被装满，我会跟孩子一起，先把纸条掏出来，大声读出上面的字，然后跟孩子一起回忆纸条上发生的事情，再把纸条分类。\n\n比如，帮助别人的放一堆，学习进步的放一堆。这样就很容易看出哪些事情做得比较好，哪些还有待加强。\n\n慢慢的，你就会发现，这些看起来小小的“成就纸条\"，推动着孩子不断进步和提高。随着成就箱一点点被填满，孩子的自信会一点点增长，对随时随地发挥优势也会更加乐此不疲。\n\n### 方法二：学会理性反馈\n\n主要有两点，一是，如何面对正面反懐，二是，如何面对负面反馈。\n\n听到别人夸奖自己时，咱们中国人往往会谦虚一下：\"哪里哪里？我还差得远呢。\"可是，这样的教育方式，不利于孩子培养自己的自信，也不真诚。\n\n1. 怎样教孩子面对别人的称赞呢？\n\n我的做法是，鼓励孩子在听到夸奖时，除了说\"谢谢！\"还要尽量多说一些细节。比如\"谢谢！我真的很努力！”或者说：\"谢谢!这次比赛我真的很重视，每天都练习，得到了好结果，我也很高兴。”\n\n这样的回答，既显示出孩子的自信，也能引发孩子继续思考，对方这么说是出于礼貌，还是真的觉得自己做得好。\n\n2. 怎样教孩子面对负面、消极反馈？\n\n同样的道理，当孩子听到来自他人的负面、消极的反馈时，你也要注意引导他们回忆当时的场景，思考为什么会有这样的评价。然后跟孩子讨论，而不是盲目地维护或教育孩子。\n\n当孩子还原出整个过程，得出了自己的结论，你再顺着他的思路告诉孩子，不要因为别人说了自己不好的地方，就否定自己。\n\n用学习的心态问问自己：别人为什么会这样说？如果是真正的错误或者缺点，那就需要改正。如果是出于误解、妒忌或者只是因为对方情绪不好，脱口而出的话，那\n\n从理性分析的角度出发，认真客观地对待自己的优势和缺点，任何负面的经历都可以转化成正面积极的学习的过程，孩子也会更加自信。\n\n### 方法三：15秒积极转念法\n\n孩子在家或者学校都难免遇到困难和挫折，有可能是同学的孤立，学习上的难题，也可能是遭遇到失败和恐惧。我来给你讲讲用15秒钟积极转念法怎么做。\n\n这个方法可以分成三步：\n\n第一步，是当孩子经历负面情绪时，我会鼓励他_边深呼吸，一边在心里默默数15秒，利用这段时间来让自己冷静降温；\n\n第二步，再用15秒，尽情地把负面情绪表达出来。比如\"我不喜欢某某，他让我难堪弟弟真讨厌，他烦死了\"；\"数学作业太难了，让我心烦。\"\n\n第三步，我会引导孩子在头脑中想象一个他喜欢的画面，画面可以是阳光、海水、沙滩，或者全家一起骑自行车、玩游戏等等。\n\n如果孩子不愿意配合，他会说：\"我还在生气，根本想不出什么美好的事情！\"所以，你要注意，做这个练习，平时就需要有意识地引导孩子去积累一些美好记忆。\n\n比如，我家老大常说，小时候有一次我们在餐馆的尽情逗笑，是他最美好的记忆。后来，在他生气或者沮丧要转念的时候，我就提醒他赶快在脑子里换频道，播放这个美好的记忆画面。\n\n这个过程刚开始有点难，但我不断坚持帮他回忆当时的一些画面场景。慢慢的，他平静下来，最后顺利地从坏情绪中抽离出来。\n\n### —♦本讲小结♦—\n\n你首先知道了孩子的独立人格是受欢迎的基础，如果没有独立人格，孩子长大后很容易迷失自己，不再受欢迎。\n\n你又收获了培养独立人格的三个方法：\n\n方法一，你可以通过优势链和成就箱两个小游戏帮孩子找到优势；\n\n方法二，教孩子理性看待反馈，尤其是负面反馈。\n\n方法三，可以用15秒积极转念法帮助孩子提高抵抗挫折的能力。\n\n小作业：\n\n用我教你的方法，帮助孩子一起做一个优势链。在制作的过程中，孩子是什么样的反应，你有什么心得和体会，请写在留言区里，和我互动。期待看到你的留言。\n\n","slug":"人格独立是真正受欢迎的根基","published":1,"updated":"2020-04-28T11:09:09.038Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9lgzujl0004i02a0g36j1jf","content":"<h1><span id=\"如何培养受欢迎的孩子人格独立是真正受欢迎的根基\">如何培养受欢迎的孩子–人格独立是真正受欢迎的根基？</span></h1><p>第一讲，我要帮你树立一个观点，人格独立才是受欢迎的前提。</p>\n<p>这一讲里，我就重点和你说说怎么在人格独立的基础上。用三个办法培养孩子的受欢迎能力。这三个办法分别是：</p>\n<ol>\n<li><p>优势游戏法</p>\n</li>\n<li><p>理性反馈法</p>\n</li>\n<li><p>15秒钟积极转念法</p>\n</li>\n</ol>\n<p>如果你的孩子上过或者正在上幼儿园，是不是每个幼儿园都有这样两种孩子。</p>\n<p>一种孩子，比较强势，喜欢发号施令，在班里说_不二；</p>\n<p>另外一种孩子，每说一句话都要看看别人的反应，他们希望别人喜欢自己，不喜欢和任何人发生冲突。</p>\n<p>这两种孩子看上去人缘都很好，但这不是我要说的真正受欢迎的孩子。</p>\n<p>这两种孩子，前一种孩子，长大后，可能因为强势的性格和霸道的作风，变得并不讨人喜欢；而后一种孩子长大后，很可能会成为别人眼中的老好人，一味迎合别人，最终会失去自己。</p>\n<p>什么是人格独立呢？</p>\n<p>我来给你讲一个我自己经历过的故事。</p>\n<p>我刚进哈佛商学院时，前三周是基础课，各种课程和班级都是随机安排的，这就给了大家一个互相认识的好机会。</p>\n<p>跟不同国籍、背景的同学交流，我最大的感受是，真正受欢迎的人，在人际交往中体现出的真诚、自信，不是以外界反馈、别人评价为基础的，而是骨子里对自己有什么优势、哪里有短板认识得很清楚。</p>\n<p>这种特质就是人格独立。</p>\n<p>可以说，人格独立是受欢迎的基础。只有当一个人实现了人格独立，他的自信才能内化成一种个人魅力，不会随着外部环境和评价的变化而变化。</p>\n<p>缺乏独立人格，也正是霸王型或讨好型孩子，长大以后不能持续受欢迎的真正原因。</p>\n<h3><span id=\"独立人格三要素\">独立人格三要素</span></h3><p>拥有独立人格，有这样三个要素：自我认知，接受反馈的能力和抵抗挫折的能力。</p>\n<ol>\n<li>自我认知：</li>\n</ol>\n<p>这是指能够清楚地知道自己是谁，对自己兴趣和能力的边界有清晰的认知。</p>\n<ol start=\"2\">\n<li>接受反馈的能力：</li>\n</ol>\n<p>反馈就有正面和负面。如何看待这些反馈，尤其是负面反馈，是独立人格的重要表现。</p>\n<p>如果一被夸奖就高兴，一被否定就不开心，这样的孩子长大后，很容易成为以自我为中心的”霸王型”，或是完全没有主见的”讨好型”。</p>\n<ol start=\"3\">\n<li>抵抗挫折的能力：</li>\n</ol>\n<p>它是独立人格形成的重要保障。抵抗挫折的能力是指孩子在遇到挫折的时候，能正视困难，不轻易否定自己，可以像不倒翁一样，跌倒了再爬起来。</p>\n<p>针对这三个要素，接下来，我和你重点说说培养孩子独立人格的二个方法。</p>\n<h3><span id=\"方法一优势链成就箱\">方法一：优势链+成就箱</span></h3><p>家长的认知和孩子的优势之间，是有偏差的。有时你觉得孩子喜欢唱歌跳舞，其实他们只是想要讨好你。你认为孩子弹琴有天赋，他们只是为了通过考级而不得不完成任务。</p>\n<p>所以，我给你的建议是，与其一厢情愿地帮孩子开发兴趣和潜力，不如用游戏的方式鼓励孩子去发现、确认自己的优势，并从中犹得乐趣。</p>\n<p>在这里，我给你推荐两个简单的小游戏，一个是优势链，一个是成就箱。</p>\n<ol>\n<li>优势链</li>\n</ol>\n<p>首先，你要让孩子把自己的优势写在彩色的纸条上，把纸条粘成一个圈，然后把所有的优势一个套一个地串起来，做成孩子的”优势链”。</p>\n<p>从戴在手腕上的”手链”，到挂在脖子上的”项链”。优势链越长，越能玩出更多的花样。除了在上面写字，还可以画画、涂色等。</p>\n<p>这个游戏隔一段时间就可以做一次。每制作一条优势链，就可以把之前做的拿出来比较一下，看看新增了哪些优势。然后放在一起，让孩子通过链条的长短、花样等，看到自己不同阶段的成长。</p>\n<p>孩子写下自己的优势时，你可以在旁边引导，”会画画……嗯，没错，你上次画的那条美人鱼真的很漂亮。””吃饭很快……为什么你觉得吃饭快是个优势呢？说来听听吧…..</p>\n<p>像这样，一边念出孩子写下的优势，一边跟他讨论、回忆具体细节，你会逐渐发现孩子真正的兴趣和潜力在哪里。这个游戏的过程，不但帮孩子认识到自己的优势，还帮助他表达、确认了自己的优势。</p>\n<ol start=\"2\">\n<li>成就箱</li>\n</ol>\n<p>从读小学起，我就让两个孩子做了自己的成就箱，拿普通的装纸巾的盒子就可以。他们把学习、生活中取得的任何成绩或进步，都写成纸条放进去。</p>\n<p>比如，”我在学校帮助小朋友找到教室”，”我记得收拾自己的碗筷”，”我今天问了老师一个不懂的问题”等等，都可以成为小纸条的内容。</p>\n<p>等到成就箱被装满，我会跟孩子一起，先把纸条掏出来，大声读出上面的字，然后跟孩子一起回忆纸条上发生的事情，再把纸条分类。</p>\n<p>比如，帮助别人的放一堆，学习进步的放一堆。这样就很容易看出哪些事情做得比较好，哪些还有待加强。</p>\n<p>慢慢的，你就会发现，这些看起来小小的“成就纸条”，推动着孩子不断进步和提高。随着成就箱一点点被填满，孩子的自信会一点点增长，对随时随地发挥优势也会更加乐此不疲。</p>\n<h3><span id=\"方法二学会理性反馈\">方法二：学会理性反馈</span></h3><p>主要有两点，一是，如何面对正面反懐，二是，如何面对负面反馈。</p>\n<p>听到别人夸奖自己时，咱们中国人往往会谦虚一下：”哪里哪里？我还差得远呢。”可是，这样的教育方式，不利于孩子培养自己的自信，也不真诚。</p>\n<ol>\n<li>怎样教孩子面对别人的称赞呢？</li>\n</ol>\n<p>我的做法是，鼓励孩子在听到夸奖时，除了说”谢谢！”还要尽量多说一些细节。比如”谢谢！我真的很努力！”或者说：”谢谢!这次比赛我真的很重视，每天都练习，得到了好结果，我也很高兴。”</p>\n<p>这样的回答，既显示出孩子的自信，也能引发孩子继续思考，对方这么说是出于礼貌，还是真的觉得自己做得好。</p>\n<ol start=\"2\">\n<li>怎样教孩子面对负面、消极反馈？</li>\n</ol>\n<p>同样的道理，当孩子听到来自他人的负面、消极的反馈时，你也要注意引导他们回忆当时的场景，思考为什么会有这样的评价。然后跟孩子讨论，而不是盲目地维护或教育孩子。</p>\n<p>当孩子还原出整个过程，得出了自己的结论，你再顺着他的思路告诉孩子，不要因为别人说了自己不好的地方，就否定自己。</p>\n<p>用学习的心态问问自己：别人为什么会这样说？如果是真正的错误或者缺点，那就需要改正。如果是出于误解、妒忌或者只是因为对方情绪不好，脱口而出的话，那</p>\n<p>从理性分析的角度出发，认真客观地对待自己的优势和缺点，任何负面的经历都可以转化成正面积极的学习的过程，孩子也会更加自信。</p>\n<h3><span id=\"方法三15秒积极转念法\">方法三：15秒积极转念法</span></h3><p>孩子在家或者学校都难免遇到困难和挫折，有可能是同学的孤立，学习上的难题，也可能是遭遇到失败和恐惧。我来给你讲讲用15秒钟积极转念法怎么做。</p>\n<p>这个方法可以分成三步：</p>\n<p>第一步，是当孩子经历负面情绪时，我会鼓励他_边深呼吸，一边在心里默默数15秒，利用这段时间来让自己冷静降温；</p>\n<p>第二步，再用15秒，尽情地把负面情绪表达出来。比如”我不喜欢某某，他让我难堪弟弟真讨厌，他烦死了”；”数学作业太难了，让我心烦。”</p>\n<p>第三步，我会引导孩子在头脑中想象一个他喜欢的画面，画面可以是阳光、海水、沙滩，或者全家一起骑自行车、玩游戏等等。</p>\n<p>如果孩子不愿意配合，他会说：”我还在生气，根本想不出什么美好的事情！”所以，你要注意，做这个练习，平时就需要有意识地引导孩子去积累一些美好记忆。</p>\n<p>比如，我家老大常说，小时候有一次我们在餐馆的尽情逗笑，是他最美好的记忆。后来，在他生气或者沮丧要转念的时候，我就提醒他赶快在脑子里换频道，播放这个美好的记忆画面。</p>\n<p>这个过程刚开始有点难，但我不断坚持帮他回忆当时的一些画面场景。慢慢的，他平静下来，最后顺利地从坏情绪中抽离出来。</p>\n<h3><span id=\"本讲小结\">—♦本讲小结♦—</span></h3><p>你首先知道了孩子的独立人格是受欢迎的基础，如果没有独立人格，孩子长大后很容易迷失自己，不再受欢迎。</p>\n<p>你又收获了培养独立人格的三个方法：</p>\n<p>方法一，你可以通过优势链和成就箱两个小游戏帮孩子找到优势；</p>\n<p>方法二，教孩子理性看待反馈，尤其是负面反馈。</p>\n<p>方法三，可以用15秒积极转念法帮助孩子提高抵抗挫折的能力。</p>\n<p>小作业：</p>\n<p>用我教你的方法，帮助孩子一起做一个优势链。在制作的过程中，孩子是什么样的反应，你有什么心得和体会，请写在留言区里，和我互动。期待看到你的留言。</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":"<h1 id=\"如何培养受欢迎的孩子–人格独立是真正受欢迎的根基？\"><a href=\"#如何培养受欢迎的孩子–人格独立是真正受欢迎的根基？\" class=\"headerlink\" title=\"如何培养受欢迎的孩子–人格独立是真正受欢迎的根基？\"></a>如何培养受欢迎的孩子–人格独立是真正受欢迎的根基？</h1><p>第一讲，我要帮你树立一个观点，人格独立才是受欢迎的前提。</p>\n<p>这一讲里，我就重点和你说说怎么在人格独立的基础上。用三个办法培养孩子的受欢迎能力。这三个办法分别是：</p>\n<ol>\n<li><p>优势游戏法</p>\n</li>\n<li><p>理性反馈法</p>\n</li>\n<li><p>15秒钟积极转念法</p>\n</li>\n</ol>\n<p>如果你的孩子上过或者正在上幼儿园，是不是每个幼儿园都有这样两种孩子。</p>\n<p>一种孩子，比较强势，喜欢发号施令，在班里说_不二；</p>\n<p>另外一种孩子，每说一句话都要看看别人的反应，他们希望别人喜欢自己，不喜欢和任何人发生冲突。</p>\n<p>这两种孩子看上去人缘都很好，但这不是我要说的真正受欢迎的孩子。</p>\n<p>这两种孩子，前一种孩子，长大后，可能因为强势的性格和霸道的作风，变得并不讨人喜欢；而后一种孩子长大后，很可能会成为别人眼中的老好人，一味迎合别人，最终会失去自己。</p>\n<p>什么是人格独立呢？</p>\n<p>我来给你讲一个我自己经历过的故事。</p>\n<p>我刚进哈佛商学院时，前三周是基础课，各种课程和班级都是随机安排的，这就给了大家一个互相认识的好机会。</p>\n<p>跟不同国籍、背景的同学交流，我最大的感受是，真正受欢迎的人，在人际交往中体现出的真诚、自信，不是以外界反馈、别人评价为基础的，而是骨子里对自己有什么优势、哪里有短板认识得很清楚。</p>\n<p>这种特质就是人格独立。</p>\n<p>可以说，人格独立是受欢迎的基础。只有当一个人实现了人格独立，他的自信才能内化成一种个人魅力，不会随着外部环境和评价的变化而变化。</p>\n<p>缺乏独立人格，也正是霸王型或讨好型孩子，长大以后不能持续受欢迎的真正原因。</p>\n<h3 id=\"独立人格三要素\"><a href=\"#独立人格三要素\" class=\"headerlink\" title=\"独立人格三要素\"></a>独立人格三要素</h3><p>拥有独立人格，有这样三个要素：自我认知，接受反馈的能力和抵抗挫折的能力。</p>\n<ol>\n<li>自我认知：</li>\n</ol>\n<p>这是指能够清楚地知道自己是谁，对自己兴趣和能力的边界有清晰的认知。</p>\n<ol start=\"2\">\n<li>接受反馈的能力：</li>\n</ol>\n<p>反馈就有正面和负面。如何看待这些反馈，尤其是负面反馈，是独立人格的重要表现。</p>\n<p>如果一被夸奖就高兴，一被否定就不开心，这样的孩子长大后，很容易成为以自我为中心的”霸王型”，或是完全没有主见的”讨好型”。</p>\n<ol start=\"3\">\n<li>抵抗挫折的能力：</li>\n</ol>\n<p>它是独立人格形成的重要保障。抵抗挫折的能力是指孩子在遇到挫折的时候，能正视困难，不轻易否定自己，可以像不倒翁一样，跌倒了再爬起来。</p>\n<p>针对这三个要素，接下来，我和你重点说说培养孩子独立人格的二个方法。</p>\n<h3 id=\"方法一：优势链-成就箱\"><a href=\"#方法一：优势链-成就箱\" class=\"headerlink\" title=\"方法一：优势链+成就箱\"></a>方法一：优势链+成就箱</h3><p>家长的认知和孩子的优势之间，是有偏差的。有时你觉得孩子喜欢唱歌跳舞，其实他们只是想要讨好你。你认为孩子弹琴有天赋，他们只是为了通过考级而不得不完成任务。</p>\n<p>所以，我给你的建议是，与其一厢情愿地帮孩子开发兴趣和潜力，不如用游戏的方式鼓励孩子去发现、确认自己的优势，并从中犹得乐趣。</p>\n<p>在这里，我给你推荐两个简单的小游戏，一个是优势链，一个是成就箱。</p>\n<ol>\n<li>优势链</li>\n</ol>\n<p>首先，你要让孩子把自己的优势写在彩色的纸条上，把纸条粘成一个圈，然后把所有的优势一个套一个地串起来，做成孩子的”优势链”。</p>\n<p>从戴在手腕上的”手链”，到挂在脖子上的”项链”。优势链越长，越能玩出更多的花样。除了在上面写字，还可以画画、涂色等。</p>\n<p>这个游戏隔一段时间就可以做一次。每制作一条优势链，就可以把之前做的拿出来比较一下，看看新增了哪些优势。然后放在一起，让孩子通过链条的长短、花样等，看到自己不同阶段的成长。</p>\n<p>孩子写下自己的优势时，你可以在旁边引导，”会画画……嗯，没错，你上次画的那条美人鱼真的很漂亮。””吃饭很快……为什么你觉得吃饭快是个优势呢？说来听听吧…..</p>\n<p>像这样，一边念出孩子写下的优势，一边跟他讨论、回忆具体细节，你会逐渐发现孩子真正的兴趣和潜力在哪里。这个游戏的过程，不但帮孩子认识到自己的优势，还帮助他表达、确认了自己的优势。</p>\n<ol start=\"2\">\n<li>成就箱</li>\n</ol>\n<p>从读小学起，我就让两个孩子做了自己的成就箱，拿普通的装纸巾的盒子就可以。他们把学习、生活中取得的任何成绩或进步，都写成纸条放进去。</p>\n<p>比如，”我在学校帮助小朋友找到教室”，”我记得收拾自己的碗筷”，”我今天问了老师一个不懂的问题”等等，都可以成为小纸条的内容。</p>\n<p>等到成就箱被装满，我会跟孩子一起，先把纸条掏出来，大声读出上面的字，然后跟孩子一起回忆纸条上发生的事情，再把纸条分类。</p>\n<p>比如，帮助别人的放一堆，学习进步的放一堆。这样就很容易看出哪些事情做得比较好，哪些还有待加强。</p>\n<p>慢慢的，你就会发现，这些看起来小小的“成就纸条”，推动着孩子不断进步和提高。随着成就箱一点点被填满，孩子的自信会一点点增长，对随时随地发挥优势也会更加乐此不疲。</p>\n<h3 id=\"方法二：学会理性反馈\"><a href=\"#方法二：学会理性反馈\" class=\"headerlink\" title=\"方法二：学会理性反馈\"></a>方法二：学会理性反馈</h3><p>主要有两点，一是，如何面对正面反懐，二是，如何面对负面反馈。</p>\n<p>听到别人夸奖自己时，咱们中国人往往会谦虚一下：”哪里哪里？我还差得远呢。”可是，这样的教育方式，不利于孩子培养自己的自信，也不真诚。</p>\n<ol>\n<li>怎样教孩子面对别人的称赞呢？</li>\n</ol>\n<p>我的做法是，鼓励孩子在听到夸奖时，除了说”谢谢！”还要尽量多说一些细节。比如”谢谢！我真的很努力！”或者说：”谢谢!这次比赛我真的很重视，每天都练习，得到了好结果，我也很高兴。”</p>\n<p>这样的回答，既显示出孩子的自信，也能引发孩子继续思考，对方这么说是出于礼貌，还是真的觉得自己做得好。</p>\n<ol start=\"2\">\n<li>怎样教孩子面对负面、消极反馈？</li>\n</ol>\n<p>同样的道理，当孩子听到来自他人的负面、消极的反馈时，你也要注意引导他们回忆当时的场景，思考为什么会有这样的评价。然后跟孩子讨论，而不是盲目地维护或教育孩子。</p>\n<p>当孩子还原出整个过程，得出了自己的结论，你再顺着他的思路告诉孩子，不要因为别人说了自己不好的地方，就否定自己。</p>\n<p>用学习的心态问问自己：别人为什么会这样说？如果是真正的错误或者缺点，那就需要改正。如果是出于误解、妒忌或者只是因为对方情绪不好，脱口而出的话，那</p>\n<p>从理性分析的角度出发，认真客观地对待自己的优势和缺点，任何负面的经历都可以转化成正面积极的学习的过程，孩子也会更加自信。</p>\n<h3 id=\"方法三：15秒积极转念法\"><a href=\"#方法三：15秒积极转念法\" class=\"headerlink\" title=\"方法三：15秒积极转念法\"></a>方法三：15秒积极转念法</h3><p>孩子在家或者学校都难免遇到困难和挫折，有可能是同学的孤立，学习上的难题，也可能是遭遇到失败和恐惧。我来给你讲讲用15秒钟积极转念法怎么做。</p>\n<p>这个方法可以分成三步：</p>\n<p>第一步，是当孩子经历负面情绪时，我会鼓励他_边深呼吸，一边在心里默默数15秒，利用这段时间来让自己冷静降温；</p>\n<p>第二步，再用15秒，尽情地把负面情绪表达出来。比如”我不喜欢某某，他让我难堪弟弟真讨厌，他烦死了”；”数学作业太难了，让我心烦。”</p>\n<p>第三步，我会引导孩子在头脑中想象一个他喜欢的画面，画面可以是阳光、海水、沙滩，或者全家一起骑自行车、玩游戏等等。</p>\n<p>如果孩子不愿意配合，他会说：”我还在生气，根本想不出什么美好的事情！”所以，你要注意，做这个练习，平时就需要有意识地引导孩子去积累一些美好记忆。</p>\n<p>比如，我家老大常说，小时候有一次我们在餐馆的尽情逗笑，是他最美好的记忆。后来，在他生气或者沮丧要转念的时候，我就提醒他赶快在脑子里换频道，播放这个美好的记忆画面。</p>\n<p>这个过程刚开始有点难，但我不断坚持帮他回忆当时的一些画面场景。慢慢的，他平静下来，最后顺利地从坏情绪中抽离出来。</p>\n<h3 id=\"—♦本讲小结♦—\"><a href=\"#—♦本讲小结♦—\" class=\"headerlink\" title=\"—♦本讲小结♦—\"></a>—♦本讲小结♦—</h3><p>你首先知道了孩子的独立人格是受欢迎的基础，如果没有独立人格，孩子长大后很容易迷失自己，不再受欢迎。</p>\n<p>你又收获了培养独立人格的三个方法：</p>\n<p>方法一，你可以通过优势链和成就箱两个小游戏帮孩子找到优势；</p>\n<p>方法二，教孩子理性看待反馈，尤其是负面反馈。</p>\n<p>方法三，可以用15秒积极转念法帮助孩子提高抵抗挫折的能力。</p>\n<p>小作业：</p>\n<p>用我教你的方法，帮助孩子一起做一个优势链。在制作的过程中，孩子是什么样的反应，你有什么心得和体会，请写在留言区里，和我互动。期待看到你的留言。</p>\n"},{"title":"如何培养受欢迎的孩子--0.哈佛喜欢什么样的孩子","top":false,"cover":false,"toc":true,"date":"2020-04-28T08:09:27.000Z","password":null,"summary":null,"_content":"\n# 如何培养受欢迎的孩子--0.哈佛喜欢什么样的孩子？\n\n最近学习《如何培养受欢迎的孩子》总结一下心得\n## 一个孩子受欢迎有多重要？\n先来分享一个我的经历：\n哈佛大学每年都会通过面试录取高中毕业生，面试官一般都是哈佛校友。作为校友，从2009年开始，我每年都会花时间承担这个义务。\n你可能会好奇，世界顶尖学府面试挑人，到底都看什么？其实没那么复杂。\n哈佛面试官衡量学生的标准只有三个：学习成绩、课外活动和Character。Character\n这个词对应汉语有点复杂，它包含了人格、品性、价值观、性格等等。\n在Character这一项里，专门有一道题，面试官要给每一个学生打分，题目是：\n\"这个学生是不是一个容易相处的室友？\"\n### 哈佛挑学生，不光看学习成绩，还考察一个人能不能跟别人融洽相处。\n这条选人标准在我的经历中也得到了印证。我从小在国内长大，身边环绕的净是学霸，现在人到中年，回过头来再看当年的同学，最成功的不一定是当年学习最拔尖的，而是最善于和别人相处的。\n从哈佛商学院毕业以后，已经在美国生活了18年。我在美国的大型企业、创业公司和投资基金都做过髙管，后来又创建了自己的咨询公司。\n在20多年的职场生涯中，我和政府很多的高层领导、大公司的CEO、基金合伙人都打过交道。职场经验告诉我，不论在中国还是在美国，大家眼中的成功人士，其实都是善于沟通的社交高手，拥有优质的可调动的社会关系。\n在美国，我找工作、谈合作、找投资，第一反应都会先想想，有没有可以求助的哈佛校友。而我自己，也常常接到校友的求助，伸出援手。强大的校友人脉体系，恰恰是哈佛商学院的竞争力所在。\n而这种人脉网络的搭建，在哈佛商学院体系中无处不在。上学的时候有学习小组、兴趣俱乐部，毕业后有向校友开放的庞大数据库，大家也经常做服务校友的志愿工作，互相支持，而且每五年都有一个返校聚会，对我们来说就像过节一样。\n这些年，我也开始给成年人开设人脉课。接触到大量的案例后，我发现，很多人总是羡慕别人人脉广，自己却无从抓起。\n其实，我越来越觉得，人脉固然是成年以后的事，但一个人有没有受欢迎的能力，这事根本得从小时候练习。\n我有两个儿子，既然从哈佛商学院学了这套人脉搭建法，我干脆把这套办法，用在了自己家儿子身上。\n当然，我不是像教授在课堂上那么教，而是把学校里学的这套办法，转化成家庭游戏，在娱乐中培养他们的社交能力。你别说，还真管用。我的两个孩子，哥哥和弟弟互相友爱，他们在学校里也很自信，有同理心，有很多朋友。\n现在，很多家长非常重视孩子的教育，在提高孩子学习成绩和鼓励他们参加课外兴趣班上不遗余力，投入巨大，但孩子社交能力的培养却没有得到应有的重视，我觉得非常可惜。\n事实上，有不少学霸型的孩子，到了大学或进入职场后，因为不懂团队合作，不会跟别人打交道而被同学、同事孤立，严重的还会引发一些心理问题。\n我认为，比在成年后针对社交问题去纠偏更重要的，是在一个人的童年时期就培养出受欢迎的能力。\n现实问题是，今天中国的80、90后已经开始当家长了。\n比如你，很可能自己就是独生子女，从小既缺兄弟姊妹的陪伴和竞争，住在城市的单元楼里，一起玩的孩子也不多，长辈又过分关怀，社交能力往往是\"缺失的一环\"。当了爹妈，怎么教孩子社交，也有点抓瞎。\n常有别的父母问我，都说性格是天生的，我本身性格内向，孩子也这样，怎么推都推不动，后天能改进吗？\n答条是肯定的。\n性格内向的孩子并不是，不喜欢跟周围的人互动，只不过面对外界刺激，他们比外向的孩子更谨慎，社交中的\"反射弧\"更长。而这，其实也是他们自己的社交优势，这样的孩子也因此常给人踏实、靠谱的印象。\n一个人的受欢迎度不是天生的，而是可以通过后天学习和训练获得的。你需要用符合孩子个性的方式，尝试跟孩子一起改变，不断激发他的社交主动性。\n在接下来的课程里，我会教给你一些具体的方法。\n我的这门课里，会把这些经验和实践，倾嚢而出。跟你分享，如何培养孩子受欢迎的能力。\n这里说的受欢迎，不是指那种因为形象出众或学习成绩好，而在学校或社会中受到优待；也不是缩手缩脚，每说一句话都要看别人反应的\"讨好型\"的孩子。\n而是建立在人格独立基础上，真诚、自信、得体地和人交往，并因此受到周围人的喜爰，得到他们的肯定和赞赏。\n一个受欢迎的孩子，内在具有稳定、正向的自我评价系统，知道自己是谁，自己的优势、短板在哪里，不会为了迎合外界，或者讨好他人，而去委屈自己。\n最终表现出来的外在行为，就是懂得在不同场合大方得体地展现自己，在社交活动中既自信又谦逊，具有稳定、持续的人格魅力。\n一个受欢迎的孩子，无论到什么环境里都容易交到朋友，这些朋友中有孩子，也有大人。\n大家都喜欢和他一起玩，喜欢和他说话，遇到问题时也会马上问问他的意见或者请他一起帮忙。这对他们成年后积累社会人脉资源有直接影响。\n受欢迎的孩子，自信、阳光、擅长沟通、同理心强，又喜欢帮助别人。他们像发光体一样，吸引着别人，在心理和生理上也更加健康，看待世界更加正面，有着更多的正能量。\n而且，受欢迎的孩子长大做了父母以后，很有可能会把这种潜质遗传给自己的孩子。\n\n要培养孩子受欢迎的能力，总的原则是\"由内到外\"，\"由近及远\"。\n\n1. \"由内到外\"：\n家长应该从培养孩子内在的独立人格做起，激发孩子的内在主动性，帮助他们完全打开自己，既能和同龄人友好相处，也能赢得身边大人的真心喜爱。\n2. \"由近及远\"：\n先在家庭内部创造平等沟通、爱和信任的氛围，跟家人建立良好互动后，再逐渐扩大社交半径，教给孩子和周围人一对一沟通的方法，和陌生人得体交流的能力，实现从家人到陌生人的融洽沟通。\n\n基于这个原则，我会在这门课程中，分六讲教给你一些具体的方法。\n\n帮助你内在培养孩子的独立人格，外在解决他们和家里人、周围人以及陌生人交往中的实际问题，成为真正受欢迎的孩子。\n第一讲，受欢迎的内在根基 ———— 人格独立。教你用优势游戏、理性反馈法和积极转念法三个方法，构建孩子内在的支持系统。\n第二讲，分别针对内向型和外向型的孩子，教你用传球游戏、赞美游戏和邀请小伙伴到家里玩，来激发他们内在的社交主动性，建立得体社交的分寸感。\n第三讲，教给你帮助孩子打开自我的三种场景，让孩子更好地融入陌生环境。\n第四讲，教孩子怎么和同龄人融洽相处。\n第五讲，教给你一些话术和训练方法，帮助孩子提高跟家里人、周围人，以及陌生人的平等、深入对话的能力，在获得成年人喜爱的同时，保护好自己。\n第六讲，根据性别的不同，结合男孩和女孩不同的特质和需要，教你培养受欢迎的男孩和女孩。\n特别期待你能带着问题来跟我一块学习。孩子就像一张白纸，父母在他们身上画出的最初印记，会深深地影响着他们的一生。你的学习，将促成他们的改变。","source":"_posts/哈佛喜欢什么样的孩子.md","raw":"---\ntitle: 如何培养受欢迎的孩子--0.哈佛喜欢什么样的孩子\ntop: false\ncover: false\ntoc: true\ndate: 2020-04-28 16:09:27\npassword:\nsummary:\ntags: \n    亲子教育\ncategories:\n    亲子教育\n---\n\n# 如何培养受欢迎的孩子--0.哈佛喜欢什么样的孩子？\n\n最近学习《如何培养受欢迎的孩子》总结一下心得\n## 一个孩子受欢迎有多重要？\n先来分享一个我的经历：\n哈佛大学每年都会通过面试录取高中毕业生，面试官一般都是哈佛校友。作为校友，从2009年开始，我每年都会花时间承担这个义务。\n你可能会好奇，世界顶尖学府面试挑人，到底都看什么？其实没那么复杂。\n哈佛面试官衡量学生的标准只有三个：学习成绩、课外活动和Character。Character\n这个词对应汉语有点复杂，它包含了人格、品性、价值观、性格等等。\n在Character这一项里，专门有一道题，面试官要给每一个学生打分，题目是：\n\"这个学生是不是一个容易相处的室友？\"\n### 哈佛挑学生，不光看学习成绩，还考察一个人能不能跟别人融洽相处。\n这条选人标准在我的经历中也得到了印证。我从小在国内长大，身边环绕的净是学霸，现在人到中年，回过头来再看当年的同学，最成功的不一定是当年学习最拔尖的，而是最善于和别人相处的。\n从哈佛商学院毕业以后，已经在美国生活了18年。我在美国的大型企业、创业公司和投资基金都做过髙管，后来又创建了自己的咨询公司。\n在20多年的职场生涯中，我和政府很多的高层领导、大公司的CEO、基金合伙人都打过交道。职场经验告诉我，不论在中国还是在美国，大家眼中的成功人士，其实都是善于沟通的社交高手，拥有优质的可调动的社会关系。\n在美国，我找工作、谈合作、找投资，第一反应都会先想想，有没有可以求助的哈佛校友。而我自己，也常常接到校友的求助，伸出援手。强大的校友人脉体系，恰恰是哈佛商学院的竞争力所在。\n而这种人脉网络的搭建，在哈佛商学院体系中无处不在。上学的时候有学习小组、兴趣俱乐部，毕业后有向校友开放的庞大数据库，大家也经常做服务校友的志愿工作，互相支持，而且每五年都有一个返校聚会，对我们来说就像过节一样。\n这些年，我也开始给成年人开设人脉课。接触到大量的案例后，我发现，很多人总是羡慕别人人脉广，自己却无从抓起。\n其实，我越来越觉得，人脉固然是成年以后的事，但一个人有没有受欢迎的能力，这事根本得从小时候练习。\n我有两个儿子，既然从哈佛商学院学了这套人脉搭建法，我干脆把这套办法，用在了自己家儿子身上。\n当然，我不是像教授在课堂上那么教，而是把学校里学的这套办法，转化成家庭游戏，在娱乐中培养他们的社交能力。你别说，还真管用。我的两个孩子，哥哥和弟弟互相友爱，他们在学校里也很自信，有同理心，有很多朋友。\n现在，很多家长非常重视孩子的教育，在提高孩子学习成绩和鼓励他们参加课外兴趣班上不遗余力，投入巨大，但孩子社交能力的培养却没有得到应有的重视，我觉得非常可惜。\n事实上，有不少学霸型的孩子，到了大学或进入职场后，因为不懂团队合作，不会跟别人打交道而被同学、同事孤立，严重的还会引发一些心理问题。\n我认为，比在成年后针对社交问题去纠偏更重要的，是在一个人的童年时期就培养出受欢迎的能力。\n现实问题是，今天中国的80、90后已经开始当家长了。\n比如你，很可能自己就是独生子女，从小既缺兄弟姊妹的陪伴和竞争，住在城市的单元楼里，一起玩的孩子也不多，长辈又过分关怀，社交能力往往是\"缺失的一环\"。当了爹妈，怎么教孩子社交，也有点抓瞎。\n常有别的父母问我，都说性格是天生的，我本身性格内向，孩子也这样，怎么推都推不动，后天能改进吗？\n答条是肯定的。\n性格内向的孩子并不是，不喜欢跟周围的人互动，只不过面对外界刺激，他们比外向的孩子更谨慎，社交中的\"反射弧\"更长。而这，其实也是他们自己的社交优势，这样的孩子也因此常给人踏实、靠谱的印象。\n一个人的受欢迎度不是天生的，而是可以通过后天学习和训练获得的。你需要用符合孩子个性的方式，尝试跟孩子一起改变，不断激发他的社交主动性。\n在接下来的课程里，我会教给你一些具体的方法。\n我的这门课里，会把这些经验和实践，倾嚢而出。跟你分享，如何培养孩子受欢迎的能力。\n这里说的受欢迎，不是指那种因为形象出众或学习成绩好，而在学校或社会中受到优待；也不是缩手缩脚，每说一句话都要看别人反应的\"讨好型\"的孩子。\n而是建立在人格独立基础上，真诚、自信、得体地和人交往，并因此受到周围人的喜爰，得到他们的肯定和赞赏。\n一个受欢迎的孩子，内在具有稳定、正向的自我评价系统，知道自己是谁，自己的优势、短板在哪里，不会为了迎合外界，或者讨好他人，而去委屈自己。\n最终表现出来的外在行为，就是懂得在不同场合大方得体地展现自己，在社交活动中既自信又谦逊，具有稳定、持续的人格魅力。\n一个受欢迎的孩子，无论到什么环境里都容易交到朋友，这些朋友中有孩子，也有大人。\n大家都喜欢和他一起玩，喜欢和他说话，遇到问题时也会马上问问他的意见或者请他一起帮忙。这对他们成年后积累社会人脉资源有直接影响。\n受欢迎的孩子，自信、阳光、擅长沟通、同理心强，又喜欢帮助别人。他们像发光体一样，吸引着别人，在心理和生理上也更加健康，看待世界更加正面，有着更多的正能量。\n而且，受欢迎的孩子长大做了父母以后，很有可能会把这种潜质遗传给自己的孩子。\n\n要培养孩子受欢迎的能力，总的原则是\"由内到外\"，\"由近及远\"。\n\n1. \"由内到外\"：\n家长应该从培养孩子内在的独立人格做起，激发孩子的内在主动性，帮助他们完全打开自己，既能和同龄人友好相处，也能赢得身边大人的真心喜爱。\n2. \"由近及远\"：\n先在家庭内部创造平等沟通、爱和信任的氛围，跟家人建立良好互动后，再逐渐扩大社交半径，教给孩子和周围人一对一沟通的方法，和陌生人得体交流的能力，实现从家人到陌生人的融洽沟通。\n\n基于这个原则，我会在这门课程中，分六讲教给你一些具体的方法。\n\n帮助你内在培养孩子的独立人格，外在解决他们和家里人、周围人以及陌生人交往中的实际问题，成为真正受欢迎的孩子。\n第一讲，受欢迎的内在根基 ———— 人格独立。教你用优势游戏、理性反馈法和积极转念法三个方法，构建孩子内在的支持系统。\n第二讲，分别针对内向型和外向型的孩子，教你用传球游戏、赞美游戏和邀请小伙伴到家里玩，来激发他们内在的社交主动性，建立得体社交的分寸感。\n第三讲，教给你帮助孩子打开自我的三种场景，让孩子更好地融入陌生环境。\n第四讲，教孩子怎么和同龄人融洽相处。\n第五讲，教给你一些话术和训练方法，帮助孩子提高跟家里人、周围人，以及陌生人的平等、深入对话的能力，在获得成年人喜爱的同时，保护好自己。\n第六讲，根据性别的不同，结合男孩和女孩不同的特质和需要，教你培养受欢迎的男孩和女孩。\n特别期待你能带着问题来跟我一块学习。孩子就像一张白纸，父母在他们身上画出的最初印记，会深深地影响着他们的一生。你的学习，将促成他们的改变。","slug":"哈佛喜欢什么样的孩子","published":1,"updated":"2020-04-28T11:08:50.056Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9lgzujr0008i02ajtm6wykl","content":"<h1><span id=\"如何培养受欢迎的孩子0哈佛喜欢什么样的孩子\">如何培养受欢迎的孩子–0.哈佛喜欢什么样的孩子？</span></h1><p>最近学习《如何培养受欢迎的孩子》总结一下心得</p>\n<h2><span id=\"一个孩子受欢迎有多重要\">一个孩子受欢迎有多重要？</span></h2><p>先来分享一个我的经历：<br>哈佛大学每年都会通过面试录取高中毕业生，面试官一般都是哈佛校友。作为校友，从2009年开始，我每年都会花时间承担这个义务。<br>你可能会好奇，世界顶尖学府面试挑人，到底都看什么？其实没那么复杂。<br>哈佛面试官衡量学生的标准只有三个：学习成绩、课外活动和Character。Character<br>这个词对应汉语有点复杂，它包含了人格、品性、价值观、性格等等。<br>在Character这一项里，专门有一道题，面试官要给每一个学生打分，题目是：<br>“这个学生是不是一个容易相处的室友？”</p>\n<h3><span id=\"哈佛挑学生不光看学习成绩还考察一个人能不能跟别人融洽相处\">哈佛挑学生，不光看学习成绩，还考察一个人能不能跟别人融洽相处。</span></h3><p>这条选人标准在我的经历中也得到了印证。我从小在国内长大，身边环绕的净是学霸，现在人到中年，回过头来再看当年的同学，最成功的不一定是当年学习最拔尖的，而是最善于和别人相处的。<br>从哈佛商学院毕业以后，已经在美国生活了18年。我在美国的大型企业、创业公司和投资基金都做过髙管，后来又创建了自己的咨询公司。<br>在20多年的职场生涯中，我和政府很多的高层领导、大公司的CEO、基金合伙人都打过交道。职场经验告诉我，不论在中国还是在美国，大家眼中的成功人士，其实都是善于沟通的社交高手，拥有优质的可调动的社会关系。<br>在美国，我找工作、谈合作、找投资，第一反应都会先想想，有没有可以求助的哈佛校友。而我自己，也常常接到校友的求助，伸出援手。强大的校友人脉体系，恰恰是哈佛商学院的竞争力所在。<br>而这种人脉网络的搭建，在哈佛商学院体系中无处不在。上学的时候有学习小组、兴趣俱乐部，毕业后有向校友开放的庞大数据库，大家也经常做服务校友的志愿工作，互相支持，而且每五年都有一个返校聚会，对我们来说就像过节一样。<br>这些年，我也开始给成年人开设人脉课。接触到大量的案例后，我发现，很多人总是羡慕别人人脉广，自己却无从抓起。<br>其实，我越来越觉得，人脉固然是成年以后的事，但一个人有没有受欢迎的能力，这事根本得从小时候练习。<br>我有两个儿子，既然从哈佛商学院学了这套人脉搭建法，我干脆把这套办法，用在了自己家儿子身上。<br>当然，我不是像教授在课堂上那么教，而是把学校里学的这套办法，转化成家庭游戏，在娱乐中培养他们的社交能力。你别说，还真管用。我的两个孩子，哥哥和弟弟互相友爱，他们在学校里也很自信，有同理心，有很多朋友。<br>现在，很多家长非常重视孩子的教育，在提高孩子学习成绩和鼓励他们参加课外兴趣班上不遗余力，投入巨大，但孩子社交能力的培养却没有得到应有的重视，我觉得非常可惜。<br>事实上，有不少学霸型的孩子，到了大学或进入职场后，因为不懂团队合作，不会跟别人打交道而被同学、同事孤立，严重的还会引发一些心理问题。<br>我认为，比在成年后针对社交问题去纠偏更重要的，是在一个人的童年时期就培养出受欢迎的能力。<br>现实问题是，今天中国的80、90后已经开始当家长了。<br>比如你，很可能自己就是独生子女，从小既缺兄弟姊妹的陪伴和竞争，住在城市的单元楼里，一起玩的孩子也不多，长辈又过分关怀，社交能力往往是”缺失的一环”。当了爹妈，怎么教孩子社交，也有点抓瞎。<br>常有别的父母问我，都说性格是天生的，我本身性格内向，孩子也这样，怎么推都推不动，后天能改进吗？<br>答条是肯定的。<br>性格内向的孩子并不是，不喜欢跟周围的人互动，只不过面对外界刺激，他们比外向的孩子更谨慎，社交中的”反射弧”更长。而这，其实也是他们自己的社交优势，这样的孩子也因此常给人踏实、靠谱的印象。<br>一个人的受欢迎度不是天生的，而是可以通过后天学习和训练获得的。你需要用符合孩子个性的方式，尝试跟孩子一起改变，不断激发他的社交主动性。<br>在接下来的课程里，我会教给你一些具体的方法。<br>我的这门课里，会把这些经验和实践，倾嚢而出。跟你分享，如何培养孩子受欢迎的能力。<br>这里说的受欢迎，不是指那种因为形象出众或学习成绩好，而在学校或社会中受到优待；也不是缩手缩脚，每说一句话都要看别人反应的”讨好型”的孩子。<br>而是建立在人格独立基础上，真诚、自信、得体地和人交往，并因此受到周围人的喜爰，得到他们的肯定和赞赏。<br>一个受欢迎的孩子，内在具有稳定、正向的自我评价系统，知道自己是谁，自己的优势、短板在哪里，不会为了迎合外界，或者讨好他人，而去委屈自己。<br>最终表现出来的外在行为，就是懂得在不同场合大方得体地展现自己，在社交活动中既自信又谦逊，具有稳定、持续的人格魅力。<br>一个受欢迎的孩子，无论到什么环境里都容易交到朋友，这些朋友中有孩子，也有大人。<br>大家都喜欢和他一起玩，喜欢和他说话，遇到问题时也会马上问问他的意见或者请他一起帮忙。这对他们成年后积累社会人脉资源有直接影响。<br>受欢迎的孩子，自信、阳光、擅长沟通、同理心强，又喜欢帮助别人。他们像发光体一样，吸引着别人，在心理和生理上也更加健康，看待世界更加正面，有着更多的正能量。<br>而且，受欢迎的孩子长大做了父母以后，很有可能会把这种潜质遗传给自己的孩子。</p>\n<p>要培养孩子受欢迎的能力，总的原则是”由内到外”，”由近及远”。</p>\n<ol>\n<li>“由内到外”：<br>家长应该从培养孩子内在的独立人格做起，激发孩子的内在主动性，帮助他们完全打开自己，既能和同龄人友好相处，也能赢得身边大人的真心喜爱。</li>\n<li>“由近及远”：<br>先在家庭内部创造平等沟通、爱和信任的氛围，跟家人建立良好互动后，再逐渐扩大社交半径，教给孩子和周围人一对一沟通的方法，和陌生人得体交流的能力，实现从家人到陌生人的融洽沟通。</li>\n</ol>\n<p>基于这个原则，我会在这门课程中，分六讲教给你一些具体的方法。</p>\n<p>帮助你内在培养孩子的独立人格，外在解决他们和家里人、周围人以及陌生人交往中的实际问题，成为真正受欢迎的孩子。<br>第一讲，受欢迎的内在根基 ———— 人格独立。教你用优势游戏、理性反馈法和积极转念法三个方法，构建孩子内在的支持系统。<br>第二讲，分别针对内向型和外向型的孩子，教你用传球游戏、赞美游戏和邀请小伙伴到家里玩，来激发他们内在的社交主动性，建立得体社交的分寸感。<br>第三讲，教给你帮助孩子打开自我的三种场景，让孩子更好地融入陌生环境。<br>第四讲，教孩子怎么和同龄人融洽相处。<br>第五讲，教给你一些话术和训练方法，帮助孩子提高跟家里人、周围人，以及陌生人的平等、深入对话的能力，在获得成年人喜爱的同时，保护好自己。<br>第六讲，根据性别的不同，结合男孩和女孩不同的特质和需要，教你培养受欢迎的男孩和女孩。<br>特别期待你能带着问题来跟我一块学习。孩子就像一张白纸，父母在他们身上画出的最初印记，会深深地影响着他们的一生。你的学习，将促成他们的改变。</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":"<h1 id=\"如何培养受欢迎的孩子–0-哈佛喜欢什么样的孩子？\"><a href=\"#如何培养受欢迎的孩子–0-哈佛喜欢什么样的孩子？\" class=\"headerlink\" title=\"如何培养受欢迎的孩子–0.哈佛喜欢什么样的孩子？\"></a>如何培养受欢迎的孩子–0.哈佛喜欢什么样的孩子？</h1><p>最近学习《如何培养受欢迎的孩子》总结一下心得</p>\n<h2 id=\"一个孩子受欢迎有多重要？\"><a href=\"#一个孩子受欢迎有多重要？\" class=\"headerlink\" title=\"一个孩子受欢迎有多重要？\"></a>一个孩子受欢迎有多重要？</h2><p>先来分享一个我的经历：<br>哈佛大学每年都会通过面试录取高中毕业生，面试官一般都是哈佛校友。作为校友，从2009年开始，我每年都会花时间承担这个义务。<br>你可能会好奇，世界顶尖学府面试挑人，到底都看什么？其实没那么复杂。<br>哈佛面试官衡量学生的标准只有三个：学习成绩、课外活动和Character。Character<br>这个词对应汉语有点复杂，它包含了人格、品性、价值观、性格等等。<br>在Character这一项里，专门有一道题，面试官要给每一个学生打分，题目是：<br>“这个学生是不是一个容易相处的室友？”</p>\n<h3 id=\"哈佛挑学生，不光看学习成绩，还考察一个人能不能跟别人融洽相处。\"><a href=\"#哈佛挑学生，不光看学习成绩，还考察一个人能不能跟别人融洽相处。\" class=\"headerlink\" title=\"哈佛挑学生，不光看学习成绩，还考察一个人能不能跟别人融洽相处。\"></a>哈佛挑学生，不光看学习成绩，还考察一个人能不能跟别人融洽相处。</h3><p>这条选人标准在我的经历中也得到了印证。我从小在国内长大，身边环绕的净是学霸，现在人到中年，回过头来再看当年的同学，最成功的不一定是当年学习最拔尖的，而是最善于和别人相处的。<br>从哈佛商学院毕业以后，已经在美国生活了18年。我在美国的大型企业、创业公司和投资基金都做过髙管，后来又创建了自己的咨询公司。<br>在20多年的职场生涯中，我和政府很多的高层领导、大公司的CEO、基金合伙人都打过交道。职场经验告诉我，不论在中国还是在美国，大家眼中的成功人士，其实都是善于沟通的社交高手，拥有优质的可调动的社会关系。<br>在美国，我找工作、谈合作、找投资，第一反应都会先想想，有没有可以求助的哈佛校友。而我自己，也常常接到校友的求助，伸出援手。强大的校友人脉体系，恰恰是哈佛商学院的竞争力所在。<br>而这种人脉网络的搭建，在哈佛商学院体系中无处不在。上学的时候有学习小组、兴趣俱乐部，毕业后有向校友开放的庞大数据库，大家也经常做服务校友的志愿工作，互相支持，而且每五年都有一个返校聚会，对我们来说就像过节一样。<br>这些年，我也开始给成年人开设人脉课。接触到大量的案例后，我发现，很多人总是羡慕别人人脉广，自己却无从抓起。<br>其实，我越来越觉得，人脉固然是成年以后的事，但一个人有没有受欢迎的能力，这事根本得从小时候练习。<br>我有两个儿子，既然从哈佛商学院学了这套人脉搭建法，我干脆把这套办法，用在了自己家儿子身上。<br>当然，我不是像教授在课堂上那么教，而是把学校里学的这套办法，转化成家庭游戏，在娱乐中培养他们的社交能力。你别说，还真管用。我的两个孩子，哥哥和弟弟互相友爱，他们在学校里也很自信，有同理心，有很多朋友。<br>现在，很多家长非常重视孩子的教育，在提高孩子学习成绩和鼓励他们参加课外兴趣班上不遗余力，投入巨大，但孩子社交能力的培养却没有得到应有的重视，我觉得非常可惜。<br>事实上，有不少学霸型的孩子，到了大学或进入职场后，因为不懂团队合作，不会跟别人打交道而被同学、同事孤立，严重的还会引发一些心理问题。<br>我认为，比在成年后针对社交问题去纠偏更重要的，是在一个人的童年时期就培养出受欢迎的能力。<br>现实问题是，今天中国的80、90后已经开始当家长了。<br>比如你，很可能自己就是独生子女，从小既缺兄弟姊妹的陪伴和竞争，住在城市的单元楼里，一起玩的孩子也不多，长辈又过分关怀，社交能力往往是”缺失的一环”。当了爹妈，怎么教孩子社交，也有点抓瞎。<br>常有别的父母问我，都说性格是天生的，我本身性格内向，孩子也这样，怎么推都推不动，后天能改进吗？<br>答条是肯定的。<br>性格内向的孩子并不是，不喜欢跟周围的人互动，只不过面对外界刺激，他们比外向的孩子更谨慎，社交中的”反射弧”更长。而这，其实也是他们自己的社交优势，这样的孩子也因此常给人踏实、靠谱的印象。<br>一个人的受欢迎度不是天生的，而是可以通过后天学习和训练获得的。你需要用符合孩子个性的方式，尝试跟孩子一起改变，不断激发他的社交主动性。<br>在接下来的课程里，我会教给你一些具体的方法。<br>我的这门课里，会把这些经验和实践，倾嚢而出。跟你分享，如何培养孩子受欢迎的能力。<br>这里说的受欢迎，不是指那种因为形象出众或学习成绩好，而在学校或社会中受到优待；也不是缩手缩脚，每说一句话都要看别人反应的”讨好型”的孩子。<br>而是建立在人格独立基础上，真诚、自信、得体地和人交往，并因此受到周围人的喜爰，得到他们的肯定和赞赏。<br>一个受欢迎的孩子，内在具有稳定、正向的自我评价系统，知道自己是谁，自己的优势、短板在哪里，不会为了迎合外界，或者讨好他人，而去委屈自己。<br>最终表现出来的外在行为，就是懂得在不同场合大方得体地展现自己，在社交活动中既自信又谦逊，具有稳定、持续的人格魅力。<br>一个受欢迎的孩子，无论到什么环境里都容易交到朋友，这些朋友中有孩子，也有大人。<br>大家都喜欢和他一起玩，喜欢和他说话，遇到问题时也会马上问问他的意见或者请他一起帮忙。这对他们成年后积累社会人脉资源有直接影响。<br>受欢迎的孩子，自信、阳光、擅长沟通、同理心强，又喜欢帮助别人。他们像发光体一样，吸引着别人，在心理和生理上也更加健康，看待世界更加正面，有着更多的正能量。<br>而且，受欢迎的孩子长大做了父母以后，很有可能会把这种潜质遗传给自己的孩子。</p>\n<p>要培养孩子受欢迎的能力，总的原则是”由内到外”，”由近及远”。</p>\n<ol>\n<li>“由内到外”：<br>家长应该从培养孩子内在的独立人格做起，激发孩子的内在主动性，帮助他们完全打开自己，既能和同龄人友好相处，也能赢得身边大人的真心喜爱。</li>\n<li>“由近及远”：<br>先在家庭内部创造平等沟通、爱和信任的氛围，跟家人建立良好互动后，再逐渐扩大社交半径，教给孩子和周围人一对一沟通的方法，和陌生人得体交流的能力，实现从家人到陌生人的融洽沟通。</li>\n</ol>\n<p>基于这个原则，我会在这门课程中，分六讲教给你一些具体的方法。</p>\n<p>帮助你内在培养孩子的独立人格，外在解决他们和家里人、周围人以及陌生人交往中的实际问题，成为真正受欢迎的孩子。<br>第一讲，受欢迎的内在根基 ———— 人格独立。教你用优势游戏、理性反馈法和积极转念法三个方法，构建孩子内在的支持系统。<br>第二讲，分别针对内向型和外向型的孩子，教你用传球游戏、赞美游戏和邀请小伙伴到家里玩，来激发他们内在的社交主动性，建立得体社交的分寸感。<br>第三讲，教给你帮助孩子打开自我的三种场景，让孩子更好地融入陌生环境。<br>第四讲，教孩子怎么和同龄人融洽相处。<br>第五讲，教给你一些话术和训练方法，帮助孩子提高跟家里人、周围人，以及陌生人的平等、深入对话的能力，在获得成年人喜爱的同时，保护好自己。<br>第六讲，根据性别的不同，结合男孩和女孩不同的特质和需要，教你培养受欢迎的男孩和女孩。<br>特别期待你能带着问题来跟我一块学习。孩子就像一张白纸，父母在他们身上画出的最初印记，会深深地影响着他们的一生。你的学习，将促成他们的改变。</p>\n"},{"title":"如何培养受欢迎的孩子--2.触发孩子社交主动性的三个方法","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-04-28T11:02:44.000Z","password":null,"summary":null,"_content":"\n\n# 如何培养受欢迎的孩子--2.触发孩子社交主动性的三个方法\n\n上一讲我们讲了拥有独立人格对于社交的重要性，并教给你三个培养孩子内在独立人格的方法。这一讲，我们来分别谈谈内向性格和外向性格的孩子应该如何主动社交和得体社交。\n\n大多数人可能认为性格内向的孩子在社交上因为缺乏主动，可能会存在很大问题。\n\n## 问题内向孩子，怎样触发社交主动性？\n\n可能你自己是内向的人，不大喜欢和别人主动交往，但是又希望孩子和自己不一样，可以更加开朗外向。也可能你自己比较外向，所以怎么也搞不懂家里为啥会有一个这么内向的孩子。\n\n别担心，首先我想告诉你的是，内向孩子也有自己独特的社交优势。\n\n哈佛大学的Randy Buckner研究发现：内向的人脑前额叶皮质里面的灰色物质更大更厚，而这个区域是与抽象思维和做决定相关的，所以内向的人一般会坐在角落里面思考周全以后才做决定。\n\n而外向的人正好相反，他们更活在当下，经常会在还没完全思考清楚的情况下就去冒险。\n\n也就是说，内向的孩子并不是不喜欢跟周围的人互动。只不过面对外界刺激，他们比外向的孩子更稳重、谨慎，社交中的“反射弧”更长。这是一件坏事吗？当然不是。\n\n很多专家学者在内向的人有自己的优势上面已经达成了共识，那就是性格内向的人和他人的工作关系更融洽、友谊更长久，与人交往时注意力更加集中，也更有责任感和创造力。\n\n所以你看，性格内向的孩子也有自己的社交优势，关键看你能否找到合适的方式去激发它。\n\n如果孩子性格内向，你应该怎么做？\n\n通过言传身教给孩子做榜样，把你是如何参加社交活动的自然而然地展示给他们看，让孩子在学习和模仿中慢慢变得开朗。\n\n如果你觉得自己也不擅长主动社交，那我教你一个方法，那就是把社交活动纳入到家庭待办事项清单里。\n\n比如定期邀请朋友全家一起吃饭或郊游，或者和三五好友一起出去玩。让主动社交从可做可不做的事，变成每隔一两周必须去做的事，赋予它一些规律性和仪式感。就像逛街、看电影一样，让它成为家庭曰常活动的一部分。\n\n内向的孩子大都比较敏感，带孩子参加社交活动时，一定要让他们有安全感，让孩子知道两点：\n\n1. 你就在身边，有任何问题或困难可以随时向你求助；\n\n2. 如果他感觉不舒服，可以提前退场或者到一个安静的角落做自己喜欢的事。\n\n触发内向孩子的社交主动性应该从家庭内部开始做起，从家长的影响和鼓励开始，再邀请周围的人参与，帮孩子慢慢打开社交圈。\n\n## 问题二：外向孩子，怎样设立社交边界？\n\n外向的孩子热情、健谈、精力旺盛，他们本身需要从和他人的交往中获得能量和满足感，这样的孩子也容易获得家长和社会环境的认同。\n\n但是不是他们在社交上就没有问题了呢？当然不是，外向孩子很容易以自我为中心，过分关注自我表现，有时会人来疯，有时会让人感到热情过度，甚至会惹人反感。\n\n外向孩子的家长要注意两点：\n\n第一：在家立规矩\n\n孩子基本的礼貌和教养一定要在家从小培养，你要教会他基本的礼貌和礼仪；\n\n第二：出门划界限\n\n跟孩子约定，注意观察所在环境和周围人的表现，关注别人的感受。一旦孩子有热情过度或反应过激的言行，家长有权力立刻制止他们，甚至是带他们离开现场。\n\n下面我要教给你三个方法，你可以通过平常和孩子一起练习，帮助孩子掌握社交主动权，并且做到得体地社交。不管是内向还是外向的孩子，这些方法都很管用。\n\n## 方法一：传球游戏\n\n教给慢热型的内向孩子如何不冷场，自来熟的外向型孩子如何不夸夸其谈招人烦，传球游戏就是一个好方法。\n\n我平时在家里是这么跟孩子玩的：\n\n我们一般面对面站着，相隔两米左右，我手里拿着一个网球。\n\n我先提_个问题，比如：“你喜欢哈利•波特的书吗？”然后我把球扔给他。\n\n如果孩子只是简单地回答：“喜欢”，那么球就只能停在他手里，不能再传给我。\n\n但是如果他说：“喜欢，因为这本书很有趣，我喜欢哈利波特和伏地魔斗争的故事”，那么他就可以把球再传给我。\n\n通过上面的例子，想必你也发现了这个游戏的核心在于，一方提出的问题，另一方的回答必须深入、具体，能给提问者一些新的由头来提出更多的问题，让谈话可以继续下去，球才能来回传递。缺乏内容的对话，或者不着边际的闲聊都不能把球传递下去。\n\n这个游戏一共有四个要点：\n\n要点一，小孩子一般很快就能掌握游戏规则，但刚开始玩的时候，也容易卡壳，不知道该怎么接话，这时你要注意启发他。\n\n比如，还是上面的场景。我接着问，\"你最喜欢书中哪些人物？”孩子回答：\"哈利波特和赫敏。\"我会说：\"这样的话，我就没法问出下一个问题，球又不能传给我啦……说说你为什么喜欢哈利波特和赫敏吧？\"孩子就会认真想想，然后回答：\"我喜欢哈利波特，因为他很勇敢。我喜欢赫敏是因为她聪明机智，又漂亮。那么，你最喜欢谁昵？\"看，这样回答就很赞了。\n\n要点二，你要使用一些话术，不断鼓励孩子把对话进行下去。\n\n比如“真棒，我喜欢你的回答。”或者“这真是一个好的开始，这个话题真有意思。”或者“太好了，我们进行了10分钟的传球游戏了，都没停过。”\n\n要点三，你可以进一步鼓励孩子开启新的话题。\n\n比如，“妈妈，你今天过得开心吗？”“爸爸，为什么我们很久都没去动物园了？”通过这样的问答，一家人交换对过去发生的事、家庭未来计划等的看法，很有点“真心话大冒险”的意思，非常有趣。\n\n要点四，你要寻找恰当的时机，让孩子明白传球游戏在生活中的意义。\n\n等到孩子比较熟练地掌握了传球游戏，我会在他们状态不错的时候，提示以前发生过的和朋友或其他成年人的对话场景。\n\n比如有一次我跟老大说：“记得今天下午张阿姨邀请你去她家和她儿子小明玩，在吃饭的时候，她问你玩得开心不开心？她是想跟你开始一个对话。但你只是说：开心。你觉得这样的球能扔回给她吗？”\n\n这样，孩子就明白我的意思了，“球”——也就是话题，停在了他的手中，游戏就没法进行下去了。然后我们就开始讨论他应该怎么回答，才能把“球”再传出去。\n\n## 方法二：赞美游戏\n\n内向的孩子观察能力强，善于分析，我们不妨利用这个优势，让孩子主动寻找他人的亮点，并加以赞美。\n\n外向型的孩子容易更多地关注自己，这个游戏可以让他们学习观察别人，关注别人，分享自己的赞美给他人。可以作为家人，分享自己的赞美给他人。可以作为家庭会议中一个常规环节，每周都可以练习。\n\n我们家一般是在周末的晚餐后做这个游戏。到了吃甜点的时间，全家坐在餐桌前，每个人都要说出挨着你的下一位在这_周内值得表扬的事情。\n\n比如从我的小儿子亚当开始，他要告诉大家他从哥哥亚力身上发现的亮点，他说：“哥哥在听说我要做手术的时候，很关心我，跑过来安慰我，说可怜的亚当，\n\n不要害怕，我们都会一直陪在你身边。”\n\n哥哥听了很高兴，拍了拍亚当的肩膀，然后看了看坐在旁边的我，说：“妈妈很善于启发别人，她的学生这周跟她说因为上了妈妈的课，改变了自己的生活。”\n\n我说：“亚力，原来妈妈和爸爸说话的时候，你都注意听了，谢谢你赞美我。这周我注意到爸爸每天晚上都给我们打电话，\n\n我觉得他出差那么辛苦，还想着每天和你们睡前聊天，值得表扬。”\n\n轮到先生了，他看着亚当说：“亚当上一周承诺他会收拾玩具房，这周他果然做得不错。承诺过的事情就负责做好，赞一个。\n\n你看，这样的赞美游戏除了鼓励孩子发现家人身上的优点，还让家庭气氛更融洽、更活跃了。\n\n其实，除了关注家庭成员，你还可以让孩子注意观察周围人或者同学的优点。\n\n我有时会在孩子吃完早餐上学之前，给他们留一个挑战作业。要求他们当天去观察别人做得好的地方，并真诚地赞美一个同学或者老师。\n\n这种游戏似的挑战，孩子们很喜欢。因为经常赞美别人，他们也时常会得到他人的正面回应。回家后，他们还会兴高采烈地汇报给我听，说自己是如何完成挑战的。\n\n赞美他人的训练除了让孩子学会关注他人的优势，见贤思齐外，还让他们具备了一个社交优势，就是赢得别人的好感。因为任何人都希望自己被关注，善意地关注他人，就会臝得对方的好感。\n\n## 方法三：邀请其他孩子来自己家玩\n\n通过邀请其他孩子来自己家玩，占据主场优势，内向孩子会更主动积极，外向孩子也不容易失礼。\n\n内向的孩子更善于一对一交往，你可以每一周或每两周让孩子约一个要好的小朋友到家里来玩。外向的孩子你就可以同时邀请几个小朋友一起来玩。\n\n因为是在自己家，内向孩子对环境更熟悉，会更积极、放松，外向孩子则会把注意力放在跟别的小朋友互动上，而不是因为对环境好奇、兴奋而翻箱倒柜，上蹿下跳的。\n\n你可以跟孩子一起提前准备好要玩的游戏，比如一般男孩子喜欢枪战，搭乐高，或者到户外玩球；女孩子喜欢玩过家家，做手工，画画等等。\n\n小主人要为客人提供几个不同的选项，充分的准备会让内向的孩子觉得更踏实，也能从对活动的掌控中获得更多的乐趣和自信。\n\n对外向孩子来说，准备好要玩的游戏，也能提前给他们建立规则和边界意识，防止游戏过程中注意力不集中或者有不合适的举止行为发生。\n\n在这个过程中，家长最好不要干预孩子之间的游戏。因为孩子是主人，他需要对如何跟客人互动，如何照顾好客人的需要负起责任。哪怕结果是他们各玩各的，你也不必担心。\n\n等到活动结束后，送走了客人，你再跟孩子做个“采访”，让他讲一讲今天为什么玩得很开心或者不太开心，下一次打算邀请什么样的小伙伴。你还可以跟孩子讨论小客人身上有哪些亮点或特长，有什么可以学习的地方。\n\n需要提醒你的是，内向的孩子容易在与人交往中感到刺激过度，需要通过独处来恢复精力，所以每次游戏的持续时间不要太长，通常一个小时之内比较好。社交活动也不要安排得太频繁，最多一周一次。让孩子有足够的时间在家里休息，给自己充电。\n\n而对外向的孩子，你要特别注意他们是否能够尽到地主之谊，关注和照顾到小客人的需要。\n\n## 小结\n\n今天我们讲了内、外向孩子在社交习惯上的区别。\n\n我们还分享了触发孩子社交主动性和得体社交的三个方法，分别是：通过传球游戏练习一对一的对话；通过赞美游戏寻找别人身上的亮点；通过邀请小伙伴到家里玩，来掌握社交主动权。\n\n小作业：\n\n请你回家和孩子一起玩传球对话的游戏。你选择了什么样的话题？过程中遇到了什么样的问题？孩子和你最多能进行几个来回的对话呢？\n","source":"_posts/触发孩子社交主动性的三个方法.md","raw":"---\ntitle: 如何培养受欢迎的孩子--2.触发孩子社交主动性的三个方法\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-04-28 19:02:44\npassword:\nsummary:\ntags: \n    亲子教育\ncategories:\n    亲子教育\n---\n\n\n# 如何培养受欢迎的孩子--2.触发孩子社交主动性的三个方法\n\n上一讲我们讲了拥有独立人格对于社交的重要性，并教给你三个培养孩子内在独立人格的方法。这一讲，我们来分别谈谈内向性格和外向性格的孩子应该如何主动社交和得体社交。\n\n大多数人可能认为性格内向的孩子在社交上因为缺乏主动，可能会存在很大问题。\n\n## 问题内向孩子，怎样触发社交主动性？\n\n可能你自己是内向的人，不大喜欢和别人主动交往，但是又希望孩子和自己不一样，可以更加开朗外向。也可能你自己比较外向，所以怎么也搞不懂家里为啥会有一个这么内向的孩子。\n\n别担心，首先我想告诉你的是，内向孩子也有自己独特的社交优势。\n\n哈佛大学的Randy Buckner研究发现：内向的人脑前额叶皮质里面的灰色物质更大更厚，而这个区域是与抽象思维和做决定相关的，所以内向的人一般会坐在角落里面思考周全以后才做决定。\n\n而外向的人正好相反，他们更活在当下，经常会在还没完全思考清楚的情况下就去冒险。\n\n也就是说，内向的孩子并不是不喜欢跟周围的人互动。只不过面对外界刺激，他们比外向的孩子更稳重、谨慎，社交中的“反射弧”更长。这是一件坏事吗？当然不是。\n\n很多专家学者在内向的人有自己的优势上面已经达成了共识，那就是性格内向的人和他人的工作关系更融洽、友谊更长久，与人交往时注意力更加集中，也更有责任感和创造力。\n\n所以你看，性格内向的孩子也有自己的社交优势，关键看你能否找到合适的方式去激发它。\n\n如果孩子性格内向，你应该怎么做？\n\n通过言传身教给孩子做榜样，把你是如何参加社交活动的自然而然地展示给他们看，让孩子在学习和模仿中慢慢变得开朗。\n\n如果你觉得自己也不擅长主动社交，那我教你一个方法，那就是把社交活动纳入到家庭待办事项清单里。\n\n比如定期邀请朋友全家一起吃饭或郊游，或者和三五好友一起出去玩。让主动社交从可做可不做的事，变成每隔一两周必须去做的事，赋予它一些规律性和仪式感。就像逛街、看电影一样，让它成为家庭曰常活动的一部分。\n\n内向的孩子大都比较敏感，带孩子参加社交活动时，一定要让他们有安全感，让孩子知道两点：\n\n1. 你就在身边，有任何问题或困难可以随时向你求助；\n\n2. 如果他感觉不舒服，可以提前退场或者到一个安静的角落做自己喜欢的事。\n\n触发内向孩子的社交主动性应该从家庭内部开始做起，从家长的影响和鼓励开始，再邀请周围的人参与，帮孩子慢慢打开社交圈。\n\n## 问题二：外向孩子，怎样设立社交边界？\n\n外向的孩子热情、健谈、精力旺盛，他们本身需要从和他人的交往中获得能量和满足感，这样的孩子也容易获得家长和社会环境的认同。\n\n但是不是他们在社交上就没有问题了呢？当然不是，外向孩子很容易以自我为中心，过分关注自我表现，有时会人来疯，有时会让人感到热情过度，甚至会惹人反感。\n\n外向孩子的家长要注意两点：\n\n第一：在家立规矩\n\n孩子基本的礼貌和教养一定要在家从小培养，你要教会他基本的礼貌和礼仪；\n\n第二：出门划界限\n\n跟孩子约定，注意观察所在环境和周围人的表现，关注别人的感受。一旦孩子有热情过度或反应过激的言行，家长有权力立刻制止他们，甚至是带他们离开现场。\n\n下面我要教给你三个方法，你可以通过平常和孩子一起练习，帮助孩子掌握社交主动权，并且做到得体地社交。不管是内向还是外向的孩子，这些方法都很管用。\n\n## 方法一：传球游戏\n\n教给慢热型的内向孩子如何不冷场，自来熟的外向型孩子如何不夸夸其谈招人烦，传球游戏就是一个好方法。\n\n我平时在家里是这么跟孩子玩的：\n\n我们一般面对面站着，相隔两米左右，我手里拿着一个网球。\n\n我先提_个问题，比如：“你喜欢哈利•波特的书吗？”然后我把球扔给他。\n\n如果孩子只是简单地回答：“喜欢”，那么球就只能停在他手里，不能再传给我。\n\n但是如果他说：“喜欢，因为这本书很有趣，我喜欢哈利波特和伏地魔斗争的故事”，那么他就可以把球再传给我。\n\n通过上面的例子，想必你也发现了这个游戏的核心在于，一方提出的问题，另一方的回答必须深入、具体，能给提问者一些新的由头来提出更多的问题，让谈话可以继续下去，球才能来回传递。缺乏内容的对话，或者不着边际的闲聊都不能把球传递下去。\n\n这个游戏一共有四个要点：\n\n要点一，小孩子一般很快就能掌握游戏规则，但刚开始玩的时候，也容易卡壳，不知道该怎么接话，这时你要注意启发他。\n\n比如，还是上面的场景。我接着问，\"你最喜欢书中哪些人物？”孩子回答：\"哈利波特和赫敏。\"我会说：\"这样的话，我就没法问出下一个问题，球又不能传给我啦……说说你为什么喜欢哈利波特和赫敏吧？\"孩子就会认真想想，然后回答：\"我喜欢哈利波特，因为他很勇敢。我喜欢赫敏是因为她聪明机智，又漂亮。那么，你最喜欢谁昵？\"看，这样回答就很赞了。\n\n要点二，你要使用一些话术，不断鼓励孩子把对话进行下去。\n\n比如“真棒，我喜欢你的回答。”或者“这真是一个好的开始，这个话题真有意思。”或者“太好了，我们进行了10分钟的传球游戏了，都没停过。”\n\n要点三，你可以进一步鼓励孩子开启新的话题。\n\n比如，“妈妈，你今天过得开心吗？”“爸爸，为什么我们很久都没去动物园了？”通过这样的问答，一家人交换对过去发生的事、家庭未来计划等的看法，很有点“真心话大冒险”的意思，非常有趣。\n\n要点四，你要寻找恰当的时机，让孩子明白传球游戏在生活中的意义。\n\n等到孩子比较熟练地掌握了传球游戏，我会在他们状态不错的时候，提示以前发生过的和朋友或其他成年人的对话场景。\n\n比如有一次我跟老大说：“记得今天下午张阿姨邀请你去她家和她儿子小明玩，在吃饭的时候，她问你玩得开心不开心？她是想跟你开始一个对话。但你只是说：开心。你觉得这样的球能扔回给她吗？”\n\n这样，孩子就明白我的意思了，“球”——也就是话题，停在了他的手中，游戏就没法进行下去了。然后我们就开始讨论他应该怎么回答，才能把“球”再传出去。\n\n## 方法二：赞美游戏\n\n内向的孩子观察能力强，善于分析，我们不妨利用这个优势，让孩子主动寻找他人的亮点，并加以赞美。\n\n外向型的孩子容易更多地关注自己，这个游戏可以让他们学习观察别人，关注别人，分享自己的赞美给他人。可以作为家人，分享自己的赞美给他人。可以作为家庭会议中一个常规环节，每周都可以练习。\n\n我们家一般是在周末的晚餐后做这个游戏。到了吃甜点的时间，全家坐在餐桌前，每个人都要说出挨着你的下一位在这_周内值得表扬的事情。\n\n比如从我的小儿子亚当开始，他要告诉大家他从哥哥亚力身上发现的亮点，他说：“哥哥在听说我要做手术的时候，很关心我，跑过来安慰我，说可怜的亚当，\n\n不要害怕，我们都会一直陪在你身边。”\n\n哥哥听了很高兴，拍了拍亚当的肩膀，然后看了看坐在旁边的我，说：“妈妈很善于启发别人，她的学生这周跟她说因为上了妈妈的课，改变了自己的生活。”\n\n我说：“亚力，原来妈妈和爸爸说话的时候，你都注意听了，谢谢你赞美我。这周我注意到爸爸每天晚上都给我们打电话，\n\n我觉得他出差那么辛苦，还想着每天和你们睡前聊天，值得表扬。”\n\n轮到先生了，他看着亚当说：“亚当上一周承诺他会收拾玩具房，这周他果然做得不错。承诺过的事情就负责做好，赞一个。\n\n你看，这样的赞美游戏除了鼓励孩子发现家人身上的优点，还让家庭气氛更融洽、更活跃了。\n\n其实，除了关注家庭成员，你还可以让孩子注意观察周围人或者同学的优点。\n\n我有时会在孩子吃完早餐上学之前，给他们留一个挑战作业。要求他们当天去观察别人做得好的地方，并真诚地赞美一个同学或者老师。\n\n这种游戏似的挑战，孩子们很喜欢。因为经常赞美别人，他们也时常会得到他人的正面回应。回家后，他们还会兴高采烈地汇报给我听，说自己是如何完成挑战的。\n\n赞美他人的训练除了让孩子学会关注他人的优势，见贤思齐外，还让他们具备了一个社交优势，就是赢得别人的好感。因为任何人都希望自己被关注，善意地关注他人，就会臝得对方的好感。\n\n## 方法三：邀请其他孩子来自己家玩\n\n通过邀请其他孩子来自己家玩，占据主场优势，内向孩子会更主动积极，外向孩子也不容易失礼。\n\n内向的孩子更善于一对一交往，你可以每一周或每两周让孩子约一个要好的小朋友到家里来玩。外向的孩子你就可以同时邀请几个小朋友一起来玩。\n\n因为是在自己家，内向孩子对环境更熟悉，会更积极、放松，外向孩子则会把注意力放在跟别的小朋友互动上，而不是因为对环境好奇、兴奋而翻箱倒柜，上蹿下跳的。\n\n你可以跟孩子一起提前准备好要玩的游戏，比如一般男孩子喜欢枪战，搭乐高，或者到户外玩球；女孩子喜欢玩过家家，做手工，画画等等。\n\n小主人要为客人提供几个不同的选项，充分的准备会让内向的孩子觉得更踏实，也能从对活动的掌控中获得更多的乐趣和自信。\n\n对外向孩子来说，准备好要玩的游戏，也能提前给他们建立规则和边界意识，防止游戏过程中注意力不集中或者有不合适的举止行为发生。\n\n在这个过程中，家长最好不要干预孩子之间的游戏。因为孩子是主人，他需要对如何跟客人互动，如何照顾好客人的需要负起责任。哪怕结果是他们各玩各的，你也不必担心。\n\n等到活动结束后，送走了客人，你再跟孩子做个“采访”，让他讲一讲今天为什么玩得很开心或者不太开心，下一次打算邀请什么样的小伙伴。你还可以跟孩子讨论小客人身上有哪些亮点或特长，有什么可以学习的地方。\n\n需要提醒你的是，内向的孩子容易在与人交往中感到刺激过度，需要通过独处来恢复精力，所以每次游戏的持续时间不要太长，通常一个小时之内比较好。社交活动也不要安排得太频繁，最多一周一次。让孩子有足够的时间在家里休息，给自己充电。\n\n而对外向的孩子，你要特别注意他们是否能够尽到地主之谊，关注和照顾到小客人的需要。\n\n## 小结\n\n今天我们讲了内、外向孩子在社交习惯上的区别。\n\n我们还分享了触发孩子社交主动性和得体社交的三个方法，分别是：通过传球游戏练习一对一的对话；通过赞美游戏寻找别人身上的亮点；通过邀请小伙伴到家里玩，来掌握社交主动权。\n\n小作业：\n\n请你回家和孩子一起玩传球对话的游戏。你选择了什么样的话题？过程中遇到了什么样的问题？孩子和你最多能进行几个来回的对话呢？\n","slug":"触发孩子社交主动性的三个方法","published":1,"updated":"2020-04-28T11:09:09.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9lgzujt000ai02a3ihh2oci","content":"<h1><span id=\"如何培养受欢迎的孩子2触发孩子社交主动性的三个方法\">如何培养受欢迎的孩子–2.触发孩子社交主动性的三个方法</span></h1><p>上一讲我们讲了拥有独立人格对于社交的重要性，并教给你三个培养孩子内在独立人格的方法。这一讲，我们来分别谈谈内向性格和外向性格的孩子应该如何主动社交和得体社交。</p>\n<p>大多数人可能认为性格内向的孩子在社交上因为缺乏主动，可能会存在很大问题。</p>\n<h2><span id=\"问题内向孩子怎样触发社交主动性\">问题内向孩子，怎样触发社交主动性？</span></h2><p>可能你自己是内向的人，不大喜欢和别人主动交往，但是又希望孩子和自己不一样，可以更加开朗外向。也可能你自己比较外向，所以怎么也搞不懂家里为啥会有一个这么内向的孩子。</p>\n<p>别担心，首先我想告诉你的是，内向孩子也有自己独特的社交优势。</p>\n<p>哈佛大学的Randy Buckner研究发现：内向的人脑前额叶皮质里面的灰色物质更大更厚，而这个区域是与抽象思维和做决定相关的，所以内向的人一般会坐在角落里面思考周全以后才做决定。</p>\n<p>而外向的人正好相反，他们更活在当下，经常会在还没完全思考清楚的情况下就去冒险。</p>\n<p>也就是说，内向的孩子并不是不喜欢跟周围的人互动。只不过面对外界刺激，他们比外向的孩子更稳重、谨慎，社交中的“反射弧”更长。这是一件坏事吗？当然不是。</p>\n<p>很多专家学者在内向的人有自己的优势上面已经达成了共识，那就是性格内向的人和他人的工作关系更融洽、友谊更长久，与人交往时注意力更加集中，也更有责任感和创造力。</p>\n<p>所以你看，性格内向的孩子也有自己的社交优势，关键看你能否找到合适的方式去激发它。</p>\n<p>如果孩子性格内向，你应该怎么做？</p>\n<p>通过言传身教给孩子做榜样，把你是如何参加社交活动的自然而然地展示给他们看，让孩子在学习和模仿中慢慢变得开朗。</p>\n<p>如果你觉得自己也不擅长主动社交，那我教你一个方法，那就是把社交活动纳入到家庭待办事项清单里。</p>\n<p>比如定期邀请朋友全家一起吃饭或郊游，或者和三五好友一起出去玩。让主动社交从可做可不做的事，变成每隔一两周必须去做的事，赋予它一些规律性和仪式感。就像逛街、看电影一样，让它成为家庭曰常活动的一部分。</p>\n<p>内向的孩子大都比较敏感，带孩子参加社交活动时，一定要让他们有安全感，让孩子知道两点：</p>\n<ol>\n<li><p>你就在身边，有任何问题或困难可以随时向你求助；</p>\n</li>\n<li><p>如果他感觉不舒服，可以提前退场或者到一个安静的角落做自己喜欢的事。</p>\n</li>\n</ol>\n<p>触发内向孩子的社交主动性应该从家庭内部开始做起，从家长的影响和鼓励开始，再邀请周围的人参与，帮孩子慢慢打开社交圈。</p>\n<h2><span id=\"问题二外向孩子怎样设立社交边界\">问题二：外向孩子，怎样设立社交边界？</span></h2><p>外向的孩子热情、健谈、精力旺盛，他们本身需要从和他人的交往中获得能量和满足感，这样的孩子也容易获得家长和社会环境的认同。</p>\n<p>但是不是他们在社交上就没有问题了呢？当然不是，外向孩子很容易以自我为中心，过分关注自我表现，有时会人来疯，有时会让人感到热情过度，甚至会惹人反感。</p>\n<p>外向孩子的家长要注意两点：</p>\n<p>第一：在家立规矩</p>\n<p>孩子基本的礼貌和教养一定要在家从小培养，你要教会他基本的礼貌和礼仪；</p>\n<p>第二：出门划界限</p>\n<p>跟孩子约定，注意观察所在环境和周围人的表现，关注别人的感受。一旦孩子有热情过度或反应过激的言行，家长有权力立刻制止他们，甚至是带他们离开现场。</p>\n<p>下面我要教给你三个方法，你可以通过平常和孩子一起练习，帮助孩子掌握社交主动权，并且做到得体地社交。不管是内向还是外向的孩子，这些方法都很管用。</p>\n<h2><span id=\"方法一传球游戏\">方法一：传球游戏</span></h2><p>教给慢热型的内向孩子如何不冷场，自来熟的外向型孩子如何不夸夸其谈招人烦，传球游戏就是一个好方法。</p>\n<p>我平时在家里是这么跟孩子玩的：</p>\n<p>我们一般面对面站着，相隔两米左右，我手里拿着一个网球。</p>\n<p>我先提_个问题，比如：“你喜欢哈利•波特的书吗？”然后我把球扔给他。</p>\n<p>如果孩子只是简单地回答：“喜欢”，那么球就只能停在他手里，不能再传给我。</p>\n<p>但是如果他说：“喜欢，因为这本书很有趣，我喜欢哈利波特和伏地魔斗争的故事”，那么他就可以把球再传给我。</p>\n<p>通过上面的例子，想必你也发现了这个游戏的核心在于，一方提出的问题，另一方的回答必须深入、具体，能给提问者一些新的由头来提出更多的问题，让谈话可以继续下去，球才能来回传递。缺乏内容的对话，或者不着边际的闲聊都不能把球传递下去。</p>\n<p>这个游戏一共有四个要点：</p>\n<p>要点一，小孩子一般很快就能掌握游戏规则，但刚开始玩的时候，也容易卡壳，不知道该怎么接话，这时你要注意启发他。</p>\n<p>比如，还是上面的场景。我接着问，”你最喜欢书中哪些人物？”孩子回答：”哈利波特和赫敏。”我会说：”这样的话，我就没法问出下一个问题，球又不能传给我啦……说说你为什么喜欢哈利波特和赫敏吧？”孩子就会认真想想，然后回答：”我喜欢哈利波特，因为他很勇敢。我喜欢赫敏是因为她聪明机智，又漂亮。那么，你最喜欢谁昵？”看，这样回答就很赞了。</p>\n<p>要点二，你要使用一些话术，不断鼓励孩子把对话进行下去。</p>\n<p>比如“真棒，我喜欢你的回答。”或者“这真是一个好的开始，这个话题真有意思。”或者“太好了，我们进行了10分钟的传球游戏了，都没停过。”</p>\n<p>要点三，你可以进一步鼓励孩子开启新的话题。</p>\n<p>比如，“妈妈，你今天过得开心吗？”“爸爸，为什么我们很久都没去动物园了？”通过这样的问答，一家人交换对过去发生的事、家庭未来计划等的看法，很有点“真心话大冒险”的意思，非常有趣。</p>\n<p>要点四，你要寻找恰当的时机，让孩子明白传球游戏在生活中的意义。</p>\n<p>等到孩子比较熟练地掌握了传球游戏，我会在他们状态不错的时候，提示以前发生过的和朋友或其他成年人的对话场景。</p>\n<p>比如有一次我跟老大说：“记得今天下午张阿姨邀请你去她家和她儿子小明玩，在吃饭的时候，她问你玩得开心不开心？她是想跟你开始一个对话。但你只是说：开心。你觉得这样的球能扔回给她吗？”</p>\n<p>这样，孩子就明白我的意思了，“球”——也就是话题，停在了他的手中，游戏就没法进行下去了。然后我们就开始讨论他应该怎么回答，才能把“球”再传出去。</p>\n<h2><span id=\"方法二赞美游戏\">方法二：赞美游戏</span></h2><p>内向的孩子观察能力强，善于分析，我们不妨利用这个优势，让孩子主动寻找他人的亮点，并加以赞美。</p>\n<p>外向型的孩子容易更多地关注自己，这个游戏可以让他们学习观察别人，关注别人，分享自己的赞美给他人。可以作为家人，分享自己的赞美给他人。可以作为家庭会议中一个常规环节，每周都可以练习。</p>\n<p>我们家一般是在周末的晚餐后做这个游戏。到了吃甜点的时间，全家坐在餐桌前，每个人都要说出挨着你的下一位在这_周内值得表扬的事情。</p>\n<p>比如从我的小儿子亚当开始，他要告诉大家他从哥哥亚力身上发现的亮点，他说：“哥哥在听说我要做手术的时候，很关心我，跑过来安慰我，说可怜的亚当，</p>\n<p>不要害怕，我们都会一直陪在你身边。”</p>\n<p>哥哥听了很高兴，拍了拍亚当的肩膀，然后看了看坐在旁边的我，说：“妈妈很善于启发别人，她的学生这周跟她说因为上了妈妈的课，改变了自己的生活。”</p>\n<p>我说：“亚力，原来妈妈和爸爸说话的时候，你都注意听了，谢谢你赞美我。这周我注意到爸爸每天晚上都给我们打电话，</p>\n<p>我觉得他出差那么辛苦，还想着每天和你们睡前聊天，值得表扬。”</p>\n<p>轮到先生了，他看着亚当说：“亚当上一周承诺他会收拾玩具房，这周他果然做得不错。承诺过的事情就负责做好，赞一个。</p>\n<p>你看，这样的赞美游戏除了鼓励孩子发现家人身上的优点，还让家庭气氛更融洽、更活跃了。</p>\n<p>其实，除了关注家庭成员，你还可以让孩子注意观察周围人或者同学的优点。</p>\n<p>我有时会在孩子吃完早餐上学之前，给他们留一个挑战作业。要求他们当天去观察别人做得好的地方，并真诚地赞美一个同学或者老师。</p>\n<p>这种游戏似的挑战，孩子们很喜欢。因为经常赞美别人，他们也时常会得到他人的正面回应。回家后，他们还会兴高采烈地汇报给我听，说自己是如何完成挑战的。</p>\n<p>赞美他人的训练除了让孩子学会关注他人的优势，见贤思齐外，还让他们具备了一个社交优势，就是赢得别人的好感。因为任何人都希望自己被关注，善意地关注他人，就会臝得对方的好感。</p>\n<h2><span id=\"方法三邀请其他孩子来自己家玩\">方法三：邀请其他孩子来自己家玩</span></h2><p>通过邀请其他孩子来自己家玩，占据主场优势，内向孩子会更主动积极，外向孩子也不容易失礼。</p>\n<p>内向的孩子更善于一对一交往，你可以每一周或每两周让孩子约一个要好的小朋友到家里来玩。外向的孩子你就可以同时邀请几个小朋友一起来玩。</p>\n<p>因为是在自己家，内向孩子对环境更熟悉，会更积极、放松，外向孩子则会把注意力放在跟别的小朋友互动上，而不是因为对环境好奇、兴奋而翻箱倒柜，上蹿下跳的。</p>\n<p>你可以跟孩子一起提前准备好要玩的游戏，比如一般男孩子喜欢枪战，搭乐高，或者到户外玩球；女孩子喜欢玩过家家，做手工，画画等等。</p>\n<p>小主人要为客人提供几个不同的选项，充分的准备会让内向的孩子觉得更踏实，也能从对活动的掌控中获得更多的乐趣和自信。</p>\n<p>对外向孩子来说，准备好要玩的游戏，也能提前给他们建立规则和边界意识，防止游戏过程中注意力不集中或者有不合适的举止行为发生。</p>\n<p>在这个过程中，家长最好不要干预孩子之间的游戏。因为孩子是主人，他需要对如何跟客人互动，如何照顾好客人的需要负起责任。哪怕结果是他们各玩各的，你也不必担心。</p>\n<p>等到活动结束后，送走了客人，你再跟孩子做个“采访”，让他讲一讲今天为什么玩得很开心或者不太开心，下一次打算邀请什么样的小伙伴。你还可以跟孩子讨论小客人身上有哪些亮点或特长，有什么可以学习的地方。</p>\n<p>需要提醒你的是，内向的孩子容易在与人交往中感到刺激过度，需要通过独处来恢复精力，所以每次游戏的持续时间不要太长，通常一个小时之内比较好。社交活动也不要安排得太频繁，最多一周一次。让孩子有足够的时间在家里休息，给自己充电。</p>\n<p>而对外向的孩子，你要特别注意他们是否能够尽到地主之谊，关注和照顾到小客人的需要。</p>\n<h2><span id=\"小结\">小结</span></h2><p>今天我们讲了内、外向孩子在社交习惯上的区别。</p>\n<p>我们还分享了触发孩子社交主动性和得体社交的三个方法，分别是：通过传球游戏练习一对一的对话；通过赞美游戏寻找别人身上的亮点；通过邀请小伙伴到家里玩，来掌握社交主动权。</p>\n<p>小作业：</p>\n<p>请你回家和孩子一起玩传球对话的游戏。你选择了什么样的话题？过程中遇到了什么样的问题？孩子和你最多能进行几个来回的对话呢？</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"godweiyang","url":"https://godweiyang.com","title":"访问主页","introduction":"公众号【算法码上来】，分享深度学习与NLP算法","avatar":"https://godweiyang.com/medias/avatars/avatar.jpg"},{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"一个有温度的深度学习小屋","avatar":"/medias/avatars/myzhihu.png"}]}},"excerpt":"","more":"<h1 id=\"如何培养受欢迎的孩子–2-触发孩子社交主动性的三个方法\"><a href=\"#如何培养受欢迎的孩子–2-触发孩子社交主动性的三个方法\" class=\"headerlink\" title=\"如何培养受欢迎的孩子–2.触发孩子社交主动性的三个方法\"></a>如何培养受欢迎的孩子–2.触发孩子社交主动性的三个方法</h1><p>上一讲我们讲了拥有独立人格对于社交的重要性，并教给你三个培养孩子内在独立人格的方法。这一讲，我们来分别谈谈内向性格和外向性格的孩子应该如何主动社交和得体社交。</p>\n<p>大多数人可能认为性格内向的孩子在社交上因为缺乏主动，可能会存在很大问题。</p>\n<h2 id=\"问题内向孩子，怎样触发社交主动性？\"><a href=\"#问题内向孩子，怎样触发社交主动性？\" class=\"headerlink\" title=\"问题内向孩子，怎样触发社交主动性？\"></a>问题内向孩子，怎样触发社交主动性？</h2><p>可能你自己是内向的人，不大喜欢和别人主动交往，但是又希望孩子和自己不一样，可以更加开朗外向。也可能你自己比较外向，所以怎么也搞不懂家里为啥会有一个这么内向的孩子。</p>\n<p>别担心，首先我想告诉你的是，内向孩子也有自己独特的社交优势。</p>\n<p>哈佛大学的Randy Buckner研究发现：内向的人脑前额叶皮质里面的灰色物质更大更厚，而这个区域是与抽象思维和做决定相关的，所以内向的人一般会坐在角落里面思考周全以后才做决定。</p>\n<p>而外向的人正好相反，他们更活在当下，经常会在还没完全思考清楚的情况下就去冒险。</p>\n<p>也就是说，内向的孩子并不是不喜欢跟周围的人互动。只不过面对外界刺激，他们比外向的孩子更稳重、谨慎，社交中的“反射弧”更长。这是一件坏事吗？当然不是。</p>\n<p>很多专家学者在内向的人有自己的优势上面已经达成了共识，那就是性格内向的人和他人的工作关系更融洽、友谊更长久，与人交往时注意力更加集中，也更有责任感和创造力。</p>\n<p>所以你看，性格内向的孩子也有自己的社交优势，关键看你能否找到合适的方式去激发它。</p>\n<p>如果孩子性格内向，你应该怎么做？</p>\n<p>通过言传身教给孩子做榜样，把你是如何参加社交活动的自然而然地展示给他们看，让孩子在学习和模仿中慢慢变得开朗。</p>\n<p>如果你觉得自己也不擅长主动社交，那我教你一个方法，那就是把社交活动纳入到家庭待办事项清单里。</p>\n<p>比如定期邀请朋友全家一起吃饭或郊游，或者和三五好友一起出去玩。让主动社交从可做可不做的事，变成每隔一两周必须去做的事，赋予它一些规律性和仪式感。就像逛街、看电影一样，让它成为家庭曰常活动的一部分。</p>\n<p>内向的孩子大都比较敏感，带孩子参加社交活动时，一定要让他们有安全感，让孩子知道两点：</p>\n<ol>\n<li><p>你就在身边，有任何问题或困难可以随时向你求助；</p>\n</li>\n<li><p>如果他感觉不舒服，可以提前退场或者到一个安静的角落做自己喜欢的事。</p>\n</li>\n</ol>\n<p>触发内向孩子的社交主动性应该从家庭内部开始做起，从家长的影响和鼓励开始，再邀请周围的人参与，帮孩子慢慢打开社交圈。</p>\n<h2 id=\"问题二：外向孩子，怎样设立社交边界？\"><a href=\"#问题二：外向孩子，怎样设立社交边界？\" class=\"headerlink\" title=\"问题二：外向孩子，怎样设立社交边界？\"></a>问题二：外向孩子，怎样设立社交边界？</h2><p>外向的孩子热情、健谈、精力旺盛，他们本身需要从和他人的交往中获得能量和满足感，这样的孩子也容易获得家长和社会环境的认同。</p>\n<p>但是不是他们在社交上就没有问题了呢？当然不是，外向孩子很容易以自我为中心，过分关注自我表现，有时会人来疯，有时会让人感到热情过度，甚至会惹人反感。</p>\n<p>外向孩子的家长要注意两点：</p>\n<p>第一：在家立规矩</p>\n<p>孩子基本的礼貌和教养一定要在家从小培养，你要教会他基本的礼貌和礼仪；</p>\n<p>第二：出门划界限</p>\n<p>跟孩子约定，注意观察所在环境和周围人的表现，关注别人的感受。一旦孩子有热情过度或反应过激的言行，家长有权力立刻制止他们，甚至是带他们离开现场。</p>\n<p>下面我要教给你三个方法，你可以通过平常和孩子一起练习，帮助孩子掌握社交主动权，并且做到得体地社交。不管是内向还是外向的孩子，这些方法都很管用。</p>\n<h2 id=\"方法一：传球游戏\"><a href=\"#方法一：传球游戏\" class=\"headerlink\" title=\"方法一：传球游戏\"></a>方法一：传球游戏</h2><p>教给慢热型的内向孩子如何不冷场，自来熟的外向型孩子如何不夸夸其谈招人烦，传球游戏就是一个好方法。</p>\n<p>我平时在家里是这么跟孩子玩的：</p>\n<p>我们一般面对面站着，相隔两米左右，我手里拿着一个网球。</p>\n<p>我先提_个问题，比如：“你喜欢哈利•波特的书吗？”然后我把球扔给他。</p>\n<p>如果孩子只是简单地回答：“喜欢”，那么球就只能停在他手里，不能再传给我。</p>\n<p>但是如果他说：“喜欢，因为这本书很有趣，我喜欢哈利波特和伏地魔斗争的故事”，那么他就可以把球再传给我。</p>\n<p>通过上面的例子，想必你也发现了这个游戏的核心在于，一方提出的问题，另一方的回答必须深入、具体，能给提问者一些新的由头来提出更多的问题，让谈话可以继续下去，球才能来回传递。缺乏内容的对话，或者不着边际的闲聊都不能把球传递下去。</p>\n<p>这个游戏一共有四个要点：</p>\n<p>要点一，小孩子一般很快就能掌握游戏规则，但刚开始玩的时候，也容易卡壳，不知道该怎么接话，这时你要注意启发他。</p>\n<p>比如，还是上面的场景。我接着问，”你最喜欢书中哪些人物？”孩子回答：”哈利波特和赫敏。”我会说：”这样的话，我就没法问出下一个问题，球又不能传给我啦……说说你为什么喜欢哈利波特和赫敏吧？”孩子就会认真想想，然后回答：”我喜欢哈利波特，因为他很勇敢。我喜欢赫敏是因为她聪明机智，又漂亮。那么，你最喜欢谁昵？”看，这样回答就很赞了。</p>\n<p>要点二，你要使用一些话术，不断鼓励孩子把对话进行下去。</p>\n<p>比如“真棒，我喜欢你的回答。”或者“这真是一个好的开始，这个话题真有意思。”或者“太好了，我们进行了10分钟的传球游戏了，都没停过。”</p>\n<p>要点三，你可以进一步鼓励孩子开启新的话题。</p>\n<p>比如，“妈妈，你今天过得开心吗？”“爸爸，为什么我们很久都没去动物园了？”通过这样的问答，一家人交换对过去发生的事、家庭未来计划等的看法，很有点“真心话大冒险”的意思，非常有趣。</p>\n<p>要点四，你要寻找恰当的时机，让孩子明白传球游戏在生活中的意义。</p>\n<p>等到孩子比较熟练地掌握了传球游戏，我会在他们状态不错的时候，提示以前发生过的和朋友或其他成年人的对话场景。</p>\n<p>比如有一次我跟老大说：“记得今天下午张阿姨邀请你去她家和她儿子小明玩，在吃饭的时候，她问你玩得开心不开心？她是想跟你开始一个对话。但你只是说：开心。你觉得这样的球能扔回给她吗？”</p>\n<p>这样，孩子就明白我的意思了，“球”——也就是话题，停在了他的手中，游戏就没法进行下去了。然后我们就开始讨论他应该怎么回答，才能把“球”再传出去。</p>\n<h2 id=\"方法二：赞美游戏\"><a href=\"#方法二：赞美游戏\" class=\"headerlink\" title=\"方法二：赞美游戏\"></a>方法二：赞美游戏</h2><p>内向的孩子观察能力强，善于分析，我们不妨利用这个优势，让孩子主动寻找他人的亮点，并加以赞美。</p>\n<p>外向型的孩子容易更多地关注自己，这个游戏可以让他们学习观察别人，关注别人，分享自己的赞美给他人。可以作为家人，分享自己的赞美给他人。可以作为家庭会议中一个常规环节，每周都可以练习。</p>\n<p>我们家一般是在周末的晚餐后做这个游戏。到了吃甜点的时间，全家坐在餐桌前，每个人都要说出挨着你的下一位在这_周内值得表扬的事情。</p>\n<p>比如从我的小儿子亚当开始，他要告诉大家他从哥哥亚力身上发现的亮点，他说：“哥哥在听说我要做手术的时候，很关心我，跑过来安慰我，说可怜的亚当，</p>\n<p>不要害怕，我们都会一直陪在你身边。”</p>\n<p>哥哥听了很高兴，拍了拍亚当的肩膀，然后看了看坐在旁边的我，说：“妈妈很善于启发别人，她的学生这周跟她说因为上了妈妈的课，改变了自己的生活。”</p>\n<p>我说：“亚力，原来妈妈和爸爸说话的时候，你都注意听了，谢谢你赞美我。这周我注意到爸爸每天晚上都给我们打电话，</p>\n<p>我觉得他出差那么辛苦，还想着每天和你们睡前聊天，值得表扬。”</p>\n<p>轮到先生了，他看着亚当说：“亚当上一周承诺他会收拾玩具房，这周他果然做得不错。承诺过的事情就负责做好，赞一个。</p>\n<p>你看，这样的赞美游戏除了鼓励孩子发现家人身上的优点，还让家庭气氛更融洽、更活跃了。</p>\n<p>其实，除了关注家庭成员，你还可以让孩子注意观察周围人或者同学的优点。</p>\n<p>我有时会在孩子吃完早餐上学之前，给他们留一个挑战作业。要求他们当天去观察别人做得好的地方，并真诚地赞美一个同学或者老师。</p>\n<p>这种游戏似的挑战，孩子们很喜欢。因为经常赞美别人，他们也时常会得到他人的正面回应。回家后，他们还会兴高采烈地汇报给我听，说自己是如何完成挑战的。</p>\n<p>赞美他人的训练除了让孩子学会关注他人的优势，见贤思齐外，还让他们具备了一个社交优势，就是赢得别人的好感。因为任何人都希望自己被关注，善意地关注他人，就会臝得对方的好感。</p>\n<h2 id=\"方法三：邀请其他孩子来自己家玩\"><a href=\"#方法三：邀请其他孩子来自己家玩\" class=\"headerlink\" title=\"方法三：邀请其他孩子来自己家玩\"></a>方法三：邀请其他孩子来自己家玩</h2><p>通过邀请其他孩子来自己家玩，占据主场优势，内向孩子会更主动积极，外向孩子也不容易失礼。</p>\n<p>内向的孩子更善于一对一交往，你可以每一周或每两周让孩子约一个要好的小朋友到家里来玩。外向的孩子你就可以同时邀请几个小朋友一起来玩。</p>\n<p>因为是在自己家，内向孩子对环境更熟悉，会更积极、放松，外向孩子则会把注意力放在跟别的小朋友互动上，而不是因为对环境好奇、兴奋而翻箱倒柜，上蹿下跳的。</p>\n<p>你可以跟孩子一起提前准备好要玩的游戏，比如一般男孩子喜欢枪战，搭乐高，或者到户外玩球；女孩子喜欢玩过家家，做手工，画画等等。</p>\n<p>小主人要为客人提供几个不同的选项，充分的准备会让内向的孩子觉得更踏实，也能从对活动的掌控中获得更多的乐趣和自信。</p>\n<p>对外向孩子来说，准备好要玩的游戏，也能提前给他们建立规则和边界意识，防止游戏过程中注意力不集中或者有不合适的举止行为发生。</p>\n<p>在这个过程中，家长最好不要干预孩子之间的游戏。因为孩子是主人，他需要对如何跟客人互动，如何照顾好客人的需要负起责任。哪怕结果是他们各玩各的，你也不必担心。</p>\n<p>等到活动结束后，送走了客人，你再跟孩子做个“采访”，让他讲一讲今天为什么玩得很开心或者不太开心，下一次打算邀请什么样的小伙伴。你还可以跟孩子讨论小客人身上有哪些亮点或特长，有什么可以学习的地方。</p>\n<p>需要提醒你的是，内向的孩子容易在与人交往中感到刺激过度，需要通过独处来恢复精力，所以每次游戏的持续时间不要太长，通常一个小时之内比较好。社交活动也不要安排得太频繁，最多一周一次。让孩子有足够的时间在家里休息，给自己充电。</p>\n<p>而对外向的孩子，你要特别注意他们是否能够尽到地主之谊，关注和照顾到小客人的需要。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>今天我们讲了内、外向孩子在社交习惯上的区别。</p>\n<p>我们还分享了触发孩子社交主动性和得体社交的三个方法，分别是：通过传球游戏练习一对一的对话；通过赞美游戏寻找别人身上的亮点；通过邀请小伙伴到家里玩，来掌握社交主动权。</p>\n<p>小作业：</p>\n<p>请你回家和孩子一起玩传球对话的游戏。你选择了什么样的话题？过程中遇到了什么样的问题？孩子和你最多能进行几个来回的对话呢？</p>\n"}],"PostAsset":[{"_id":"source/_posts/sort-algorithms/1.png","post":"ck9lgzujh0002i02acp5jm2ew","slug":"1.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ck9lgzujh0002i02acp5jm2ew","category_id":"ck9lgzujo0005i02aonvv51ga","_id":"ck9lgzujw000di02a7iqsb400"},{"post_id":"ck9lgzujl0004i02a0g36j1jf","category_id":"ck9lgzujv000bi02apvwr4knd","_id":"ck9lgzujy000ji02a3r10vyet"},{"post_id":"ck9lgzujr0008i02ajtm6wykl","category_id":"ck9lgzujv000bi02apvwr4knd","_id":"ck9lgzuk1000mi02ap337dzea"},{"post_id":"ck9lgzujt000ai02a3ihh2oci","category_id":"ck9lgzujv000bi02apvwr4knd","_id":"ck9lgzuk1000pi02azx5mb519"}],"PostTag":[{"post_id":"ck9lgzujh0002i02acp5jm2ew","tag_id":"ck9lgzujq0006i02arnnk4d89","_id":"ck9lgzujy000gi02a96ai0pmv"},{"post_id":"ck9lgzujh0002i02acp5jm2ew","tag_id":"ck9lgzujv000ci02a7rzaa1j9","_id":"ck9lgzujy000hi02arb10te4h"},{"post_id":"ck9lgzujl0004i02a0g36j1jf","tag_id":"ck9lgzujw000fi02al9bakbte","_id":"ck9lgzuk0000li02antabz7ok"},{"post_id":"ck9lgzujr0008i02ajtm6wykl","tag_id":"ck9lgzujw000fi02al9bakbte","_id":"ck9lgzuk1000oi02a3a2s5akt"},{"post_id":"ck9lgzujt000ai02a3ihh2oci","tag_id":"ck9lgzujw000fi02al9bakbte","_id":"ck9lgzuk2000qi02aswk512rm"}],"Tag":[{"name":"leetcode","_id":"ck9lgzujq0006i02arnnk4d89"},{"name":"算法","_id":"ck9lgzujv000ci02a7rzaa1j9"},{"name":"亲子教育","_id":"ck9lgzujw000fi02al9bakbte"}]}}